

(********************************************************************
	@name Coq declarations for metamodel: <DBLP>
	@date 2021/10/17 11:34:19
	@description Automatically generated by Ecore2Coq transformation.
 ********************************************************************)

(* Coq libraries *)
Require Import String.
Require Import Bool.
Require Import List.      (* sequence *)
Require Import Multiset.  (* bag *)
Require Import ListSet.   (* set *)
Require Import PeanoNat.
Require Import EqNat.
Require Import Coq.Logic.Eqdep_dec.

Require Import core.EqDec.
Require Import core.utils.Utils.
Require Import core.Metamodel.
Require Import core.modeling.ModelingMetamodel.
Require Import core.Model.
Require Import core.utils.CpdtTactics.

(* Base types *)


Inductive Record : Set :=
  BuildRecord :
  (* ee *) string ->
  (* url *) string ->
  (* key *) string ->
  (* mdate *) string ->
  Record.

Inductive Article : Set :=
  BuildArticle :
  (* Inheritence Attribute *) Record -> 
  (* title *) string ->
  (* fromPage *) nat ->
  (* toPage *) nat ->
  (* number *) nat ->
  (* volume *) string ->
  (* month *) string ->
  (* year *) nat ->
  Article.

Inductive Author : Set :=
  BuildAuthor :
  (* name *) string ->
  Author.

Inductive Journal : Set :=
  BuildJournal :
  (* name *) string ->
  Journal.

Inductive Book : Set :=
  BuildBook :
  (* Inheritence Attribute *) Record -> 
  (* title *) string ->
  (* year *) nat ->
  (* month *) string ->
  (* volume *) nat ->
  (* series *) string ->
  (* edition *) nat ->
  (* isbn *) string ->
  Book.

Inductive InCollection : Set :=
  BuildInCollection :
  (* Inheritence Attribute *) Record -> 
  (* title *) string ->
  (* bookTitle *) string ->
  (* year *) nat ->
  (* fromPage *) nat ->
  (* toPage *) nat ->
  (* month *) string ->
  InCollection.

Inductive InProceedings : Set :=
  BuildInProceedings :
  (* Inheritence Attribute *) Record -> 
  (* title *) string ->
  (* bootitle *) string ->
  (* year *) nat ->
  (* fromPage *) nat ->
  (* toPage *) nat ->
  (* month *) string ->
  InProceedings.

Inductive MastersThesis : Set :=
  BuildMastersThesis :
  (* Inheritence Attribute *) Record -> 
  (* title *) string ->
  (* year *) nat ->
  (* month *) string ->
  MastersThesis.

Inductive Proceedings : Set :=
  BuildProceedings :
  (* Inheritence Attribute *) Record -> 
  (* title *) string ->
  (* year *) nat ->
  (* month *) string ->
  (* isbn *) string ->
  Proceedings.

Inductive PhDThesis : Set :=
  BuildPhDThesis :
  (* Inheritence Attribute *) Record -> 
  (* title *) string ->
  (* year *) nat ->
  (* month *) string ->
  PhDThesis.

Inductive Www : Set :=
  BuildWww :
  (* Inheritence Attribute *) Record -> 
  (* title *) string ->
  (* year *) nat ->
  (* month *) string ->
  Www.

Inductive Editor : Set :=
  BuildEditor :
  (* name *) string ->
  Editor.

Inductive Organization : Set :=
  BuildOrganization :
  (* name *) string ->
  Organization.

Inductive Publisher : Set :=
  BuildPublisher :
  (* name *) string ->
  (* address *) string ->
  Publisher.

Inductive School : Set :=
  BuildSchool :
  (* name *) string ->
  (* address *) string ->
  School.


Inductive RecordAuthors : Set :=
   BuildRecordAuthors :
   Record ->
   list Author ->
   RecordAuthors.

Definition maybeBuildRecordAuthors (re_arg: Record) (au_arg: option (list Author)) : option RecordAuthors :=
  match re_arg, au_arg with
  | re_arg_succ, Some au_arg_succ => Some (BuildRecordAuthors re_arg_succ au_arg_succ)
  | _, _ => None
  end.

Inductive ArticleJournal : Set :=
   BuildArticleJournal :
   Article ->
   Journal ->
   ArticleJournal.

Definition maybeBuildArticleJournal (ar_arg: Article) (jo_arg: option (Journal)) : option ArticleJournal :=
  match ar_arg, jo_arg with
  | ar_arg_succ, Some jo_arg_succ => Some (BuildArticleJournal ar_arg_succ jo_arg_succ)
  | _, _ => None
  end.

Inductive AuthorRecords : Set :=
   BuildAuthorRecords :
   Author ->
   list Record ->
   AuthorRecords.

Definition maybeBuildAuthorRecords (au_arg: Author) (re_arg: option (list Record)) : option AuthorRecords :=
  match au_arg, re_arg with
  | au_arg_succ, Some re_arg_succ => Some (BuildAuthorRecords au_arg_succ re_arg_succ)
  | _, _ => None
  end.

Inductive JournalArticles : Set :=
   BuildJournalArticles :
   Journal ->
   list Article ->
   JournalArticles.

Definition maybeBuildJournalArticles (jo_arg: Journal) (ar_arg: option (list Article)) : option JournalArticles :=
  match jo_arg, ar_arg with
  | jo_arg_succ, Some ar_arg_succ => Some (BuildJournalArticles jo_arg_succ ar_arg_succ)
  | _, _ => None
  end.

Inductive BookPublisher : Set :=
   BuildBookPublisher :
   Book ->
   Publisher ->
   BookPublisher.

Definition maybeBuildBookPublisher (bo_arg: Book) (pu_arg: option (Publisher)) : option BookPublisher :=
  match bo_arg, pu_arg with
  | bo_arg_succ, Some pu_arg_succ => Some (BuildBookPublisher bo_arg_succ pu_arg_succ)
  | _, _ => None
  end.

Inductive InCollectionEditors : Set :=
   BuildInCollectionEditors :
   InCollection ->
   list Editor ->
   InCollectionEditors.

Definition maybeBuildInCollectionEditors (in_arg: InCollection) (ed_arg: option (list Editor)) : option InCollectionEditors :=
  match in_arg, ed_arg with
  | in_arg_succ, Some ed_arg_succ => Some (BuildInCollectionEditors in_arg_succ ed_arg_succ)
  | _, _ => None
  end.
Inductive InCollectionSponsoredBy : Set :=
   BuildInCollectionSponsoredBy :
   InCollection ->
   Organization ->
   InCollectionSponsoredBy.

Definition maybeBuildInCollectionSponsoredBy (in_arg: InCollection) (sp_arg: option (Organization)) : option InCollectionSponsoredBy :=
  match in_arg, sp_arg with
  | in_arg_succ, Some sp_arg_succ => Some (BuildInCollectionSponsoredBy in_arg_succ sp_arg_succ)
  | _, _ => None
  end.
Inductive InCollectionPublisher : Set :=
   BuildInCollectionPublisher :
   InCollection ->
   Publisher ->
   InCollectionPublisher.

Definition maybeBuildInCollectionPublisher (in_arg: InCollection) (pu_arg: option (Publisher)) : option InCollectionPublisher :=
  match in_arg, pu_arg with
  | in_arg_succ, Some pu_arg_succ => Some (BuildInCollectionPublisher in_arg_succ pu_arg_succ)
  | _, _ => None
  end.

Inductive InProceedingsEditors : Set :=
   BuildInProceedingsEditors :
   InProceedings ->
   list Editor ->
   InProceedingsEditors.

Definition maybeBuildInProceedingsEditors (in_arg: InProceedings) (ed_arg: option (list Editor)) : option InProceedingsEditors :=
  match in_arg, ed_arg with
  | in_arg_succ, Some ed_arg_succ => Some (BuildInProceedingsEditors in_arg_succ ed_arg_succ)
  | _, _ => None
  end.
Inductive InProceedingsOrganization : Set :=
   BuildInProceedingsOrganization :
   InProceedings ->
   Organization ->
   InProceedingsOrganization.

Definition maybeBuildInProceedingsOrganization (in_arg: InProceedings) (or_arg: option (Organization)) : option InProceedingsOrganization :=
  match in_arg, or_arg with
  | in_arg_succ, Some or_arg_succ => Some (BuildInProceedingsOrganization in_arg_succ or_arg_succ)
  | _, _ => None
  end.
Inductive InProceedingsPublisher : Set :=
   BuildInProceedingsPublisher :
   InProceedings ->
   Publisher ->
   InProceedingsPublisher.

Definition maybeBuildInProceedingsPublisher (in_arg: InProceedings) (pu_arg: option (Publisher)) : option InProceedingsPublisher :=
  match in_arg, pu_arg with
  | in_arg_succ, Some pu_arg_succ => Some (BuildInProceedingsPublisher in_arg_succ pu_arg_succ)
  | _, _ => None
  end.

Inductive MastersThesisSchool : Set :=
   BuildMastersThesisSchool :
   MastersThesis ->
   School ->
   MastersThesisSchool.

Definition maybeBuildMastersThesisSchool (ma_arg: MastersThesis) (sc_arg: option (School)) : option MastersThesisSchool :=
  match ma_arg, sc_arg with
  | ma_arg_succ, Some sc_arg_succ => Some (BuildMastersThesisSchool ma_arg_succ sc_arg_succ)
  | _, _ => None
  end.

Inductive ProceedingsEditors : Set :=
   BuildProceedingsEditors :
   Proceedings ->
   list Editor ->
   ProceedingsEditors.

Definition maybeBuildProceedingsEditors (pr_arg: Proceedings) (ed_arg: option (list Editor)) : option ProceedingsEditors :=
  match pr_arg, ed_arg with
  | pr_arg_succ, Some ed_arg_succ => Some (BuildProceedingsEditors pr_arg_succ ed_arg_succ)
  | _, _ => None
  end.
Inductive ProceedingsPublisher : Set :=
   BuildProceedingsPublisher :
   Proceedings ->
   Publisher ->
   ProceedingsPublisher.

Definition maybeBuildProceedingsPublisher (pr_arg: Proceedings) (pu_arg: option (Publisher)) : option ProceedingsPublisher :=
  match pr_arg, pu_arg with
  | pr_arg_succ, Some pu_arg_succ => Some (BuildProceedingsPublisher pr_arg_succ pu_arg_succ)
  | _, _ => None
  end.
Inductive ProceedingsSponsoredBy : Set :=
   BuildProceedingsSponsoredBy :
   Proceedings ->
   list Organization ->
   ProceedingsSponsoredBy.

Definition maybeBuildProceedingsSponsoredBy (pr_arg: Proceedings) (sp_arg: option (list Organization)) : option ProceedingsSponsoredBy :=
  match pr_arg, sp_arg with
  | pr_arg_succ, Some sp_arg_succ => Some (BuildProceedingsSponsoredBy pr_arg_succ sp_arg_succ)
  | _, _ => None
  end.

Inductive PhDThesisSchool : Set :=
   BuildPhDThesisSchool :
   PhDThesis ->
   School ->
   PhDThesisSchool.

Definition maybeBuildPhDThesisSchool (ph_arg: PhDThesis) (sc_arg: option (School)) : option PhDThesisSchool :=
  match ph_arg, sc_arg with
  | ph_arg_succ, Some sc_arg_succ => Some (BuildPhDThesisSchool ph_arg_succ sc_arg_succ)
  | _, _ => None
  end.

Inductive WwwEditors : Set :=
   BuildWwwEditors :
   Www ->
   list Editor ->
   WwwEditors.

Definition maybeBuildWwwEditors (ww_arg: Www) (ed_arg: option (list Editor)) : option WwwEditors :=
  match ww_arg, ed_arg with
  | ww_arg_succ, Some ed_arg_succ => Some (BuildWwwEditors ww_arg_succ ed_arg_succ)
  | _, _ => None
  end.







(* Accessors *)
Definition Record_getEe (r : Record) : string :=
  match r with BuildRecord  ee url key mdate  => ee end.
Definition Record_getUrl (r : Record) : string :=
  match r with BuildRecord  ee url key mdate  => url end.
Definition Record_getKey (r : Record) : string :=
  match r with BuildRecord  ee url key mdate  => key end.
Definition Record_getMdate (r : Record) : string :=
  match r with BuildRecord  ee url key mdate  => mdate end.

Definition Article_getRecord (a : Article) : Record :=
  match a with BuildArticle record title fromPage toPage number volume month year  => record end.
Definition Article_getTitle (a : Article) : string :=
  match a with BuildArticle record title fromPage toPage number volume month year  => title end.
Definition Article_getFromPage (a : Article) : nat :=
  match a with BuildArticle record title fromPage toPage number volume month year  => fromPage end.
Definition Article_getToPage (a : Article) : nat :=
  match a with BuildArticle record title fromPage toPage number volume month year  => toPage end.
Definition Article_getNumber (a : Article) : nat :=
  match a with BuildArticle record title fromPage toPage number volume month year  => number end.
Definition Article_getVolume (a : Article) : string :=
  match a with BuildArticle record title fromPage toPage number volume month year  => volume end.
Definition Article_getMonth (a : Article) : string :=
  match a with BuildArticle record title fromPage toPage number volume month year  => month end.
Definition Article_getYear (a : Article) : nat :=
  match a with BuildArticle record title fromPage toPage number volume month year  => year end.

Definition Author_getName (a : Author) : string :=
  match a with BuildAuthor  name  => name end.

Definition Journal_getName (j : Journal) : string :=
  match j with BuildJournal  name  => name end.

Definition Book_getRecord (b : Book) : Record :=
  match b with BuildBook record title year month volume series edition isbn  => record end.
Definition Book_getTitle (b : Book) : string :=
  match b with BuildBook record title year month volume series edition isbn  => title end.
Definition Book_getYear (b : Book) : nat :=
  match b with BuildBook record title year month volume series edition isbn  => year end.
Definition Book_getMonth (b : Book) : string :=
  match b with BuildBook record title year month volume series edition isbn  => month end.
Definition Book_getVolume (b : Book) : nat :=
  match b with BuildBook record title year month volume series edition isbn  => volume end.
Definition Book_getSeries (b : Book) : string :=
  match b with BuildBook record title year month volume series edition isbn  => series end.
Definition Book_getEdition (b : Book) : nat :=
  match b with BuildBook record title year month volume series edition isbn  => edition end.
Definition Book_getIsbn (b : Book) : string :=
  match b with BuildBook record title year month volume series edition isbn  => isbn end.

Definition InCollection_getRecord (i : InCollection) : Record :=
  match i with BuildInCollection record title bookTitle year fromPage toPage month  => record end.
Definition InCollection_getTitle (i : InCollection) : string :=
  match i with BuildInCollection record title bookTitle year fromPage toPage month  => title end.
Definition InCollection_getBookTitle (i : InCollection) : string :=
  match i with BuildInCollection record title bookTitle year fromPage toPage month  => bookTitle end.
Definition InCollection_getYear (i : InCollection) : nat :=
  match i with BuildInCollection record title bookTitle year fromPage toPage month  => year end.
Definition InCollection_getFromPage (i : InCollection) : nat :=
  match i with BuildInCollection record title bookTitle year fromPage toPage month  => fromPage end.
Definition InCollection_getToPage (i : InCollection) : nat :=
  match i with BuildInCollection record title bookTitle year fromPage toPage month  => toPage end.
Definition InCollection_getMonth (i : InCollection) : string :=
  match i with BuildInCollection record title bookTitle year fromPage toPage month  => month end.

Definition InProceedings_getRecord (i : InProceedings) : Record :=
  match i with BuildInProceedings record title bootitle year fromPage toPage month  => record end.
Definition InProceedings_getTitle (i : InProceedings) : string :=
  match i with BuildInProceedings record title bootitle year fromPage toPage month  => title end.
Definition InProceedings_getBootitle (i : InProceedings) : string :=
  match i with BuildInProceedings record title bootitle year fromPage toPage month  => bootitle end.
Definition InProceedings_getYear (i : InProceedings) : nat :=
  match i with BuildInProceedings record title bootitle year fromPage toPage month  => year end.
Definition InProceedings_getFromPage (i : InProceedings) : nat :=
  match i with BuildInProceedings record title bootitle year fromPage toPage month  => fromPage end.
Definition InProceedings_getToPage (i : InProceedings) : nat :=
  match i with BuildInProceedings record title bootitle year fromPage toPage month  => toPage end.
Definition InProceedings_getMonth (i : InProceedings) : string :=
  match i with BuildInProceedings record title bootitle year fromPage toPage month  => month end.

Definition MastersThesis_getRecord (m : MastersThesis) : Record :=
  match m with BuildMastersThesis record title year month  => record end.
Definition MastersThesis_getTitle (m : MastersThesis) : string :=
  match m with BuildMastersThesis record title year month  => title end.
Definition MastersThesis_getYear (m : MastersThesis) : nat :=
  match m with BuildMastersThesis record title year month  => year end.
Definition MastersThesis_getMonth (m : MastersThesis) : string :=
  match m with BuildMastersThesis record title year month  => month end.

Definition Proceedings_getRecord (p : Proceedings) : Record :=
  match p with BuildProceedings record title year month isbn  => record end.
Definition Proceedings_getTitle (p : Proceedings) : string :=
  match p with BuildProceedings record title year month isbn  => title end.
Definition Proceedings_getYear (p : Proceedings) : nat :=
  match p with BuildProceedings record title year month isbn  => year end.
Definition Proceedings_getMonth (p : Proceedings) : string :=
  match p with BuildProceedings record title year month isbn  => month end.
Definition Proceedings_getIsbn (p : Proceedings) : string :=
  match p with BuildProceedings record title year month isbn  => isbn end.

Definition PhDThesis_getRecord (p : PhDThesis) : Record :=
  match p with BuildPhDThesis record title year month  => record end.
Definition PhDThesis_getTitle (p : PhDThesis) : string :=
  match p with BuildPhDThesis record title year month  => title end.
Definition PhDThesis_getYear (p : PhDThesis) : nat :=
  match p with BuildPhDThesis record title year month  => year end.
Definition PhDThesis_getMonth (p : PhDThesis) : string :=
  match p with BuildPhDThesis record title year month  => month end.

Definition Www_getRecord (w : Www) : Record :=
  match w with BuildWww record title year month  => record end.
Definition Www_getTitle (w : Www) : string :=
  match w with BuildWww record title year month  => title end.
Definition Www_getYear (w : Www) : nat :=
  match w with BuildWww record title year month  => year end.
Definition Www_getMonth (w : Www) : string :=
  match w with BuildWww record title year month  => month end.

Definition Editor_getName (e : Editor) : string :=
  match e with BuildEditor  name  => name end.

Definition Organization_getName (o : Organization) : string :=
  match o with BuildOrganization  name  => name end.

Definition Publisher_getName (p : Publisher) : string :=
  match p with BuildPublisher  name address  => name end.
Definition Publisher_getAddress (p : Publisher) : string :=
  match p with BuildPublisher  name address  => address end.

Definition School_getName (s : School) : string :=
  match s with BuildSchool  name address  => name end.
Definition School_getAddress (s : School) : string :=
  match s with BuildSchool  name address  => address end.


Definition beq_Record (re_arg1 : Record) (re_arg2 : Record) : bool :=
( beq_string (Record_getEe re_arg1) (Record_getEe re_arg2) ) && 
( beq_string (Record_getUrl re_arg1) (Record_getUrl re_arg2) ) && 
( beq_string (Record_getKey re_arg1) (Record_getKey re_arg2) ) && 
( beq_string (Record_getMdate re_arg1) (Record_getMdate re_arg2) )
.

Definition beq_Article (ar_arg1 : Article) (ar_arg2 : Article) : bool :=
beq_Record (Article_getRecord ar_arg1) (Article_getRecord ar_arg2) &&
( beq_string (Article_getTitle ar_arg1) (Article_getTitle ar_arg2) ) && 
( beq_nat (Article_getFromPage ar_arg1) (Article_getFromPage ar_arg2) ) && 
( beq_nat (Article_getToPage ar_arg1) (Article_getToPage ar_arg2) ) && 
( beq_nat (Article_getNumber ar_arg1) (Article_getNumber ar_arg2) ) && 
( beq_string (Article_getVolume ar_arg1) (Article_getVolume ar_arg2) ) && 
( beq_string (Article_getMonth ar_arg1) (Article_getMonth ar_arg2) ) && 
( beq_nat (Article_getYear ar_arg1) (Article_getYear ar_arg2) )
.

Definition beq_Author (au_arg1 : Author) (au_arg2 : Author) : bool :=
( beq_string (Author_getName au_arg1) (Author_getName au_arg2) )
.

Definition beq_Journal (jo_arg1 : Journal) (jo_arg2 : Journal) : bool :=
( beq_string (Journal_getName jo_arg1) (Journal_getName jo_arg2) )
.

Definition beq_Book (bo_arg1 : Book) (bo_arg2 : Book) : bool :=
beq_Record (Book_getRecord bo_arg1) (Book_getRecord bo_arg2) &&
( beq_string (Book_getTitle bo_arg1) (Book_getTitle bo_arg2) ) && 
( beq_nat (Book_getYear bo_arg1) (Book_getYear bo_arg2) ) && 
( beq_string (Book_getMonth bo_arg1) (Book_getMonth bo_arg2) ) && 
( beq_nat (Book_getVolume bo_arg1) (Book_getVolume bo_arg2) ) && 
( beq_string (Book_getSeries bo_arg1) (Book_getSeries bo_arg2) ) && 
( beq_nat (Book_getEdition bo_arg1) (Book_getEdition bo_arg2) ) && 
( beq_string (Book_getIsbn bo_arg1) (Book_getIsbn bo_arg2) )
.

Definition beq_InCollection (in_arg1 : InCollection) (in_arg2 : InCollection) : bool :=
beq_Record (InCollection_getRecord in_arg1) (InCollection_getRecord in_arg2) &&
( beq_string (InCollection_getTitle in_arg1) (InCollection_getTitle in_arg2) ) && 
( beq_string (InCollection_getBookTitle in_arg1) (InCollection_getBookTitle in_arg2) ) && 
( beq_nat (InCollection_getYear in_arg1) (InCollection_getYear in_arg2) ) && 
( beq_nat (InCollection_getFromPage in_arg1) (InCollection_getFromPage in_arg2) ) && 
( beq_nat (InCollection_getToPage in_arg1) (InCollection_getToPage in_arg2) ) && 
( beq_string (InCollection_getMonth in_arg1) (InCollection_getMonth in_arg2) )
.

Definition beq_InProceedings (in_arg1 : InProceedings) (in_arg2 : InProceedings) : bool :=
beq_Record (InProceedings_getRecord in_arg1) (InProceedings_getRecord in_arg2) &&
( beq_string (InProceedings_getTitle in_arg1) (InProceedings_getTitle in_arg2) ) && 
( beq_string (InProceedings_getBootitle in_arg1) (InProceedings_getBootitle in_arg2) ) && 
( beq_nat (InProceedings_getYear in_arg1) (InProceedings_getYear in_arg2) ) && 
( beq_nat (InProceedings_getFromPage in_arg1) (InProceedings_getFromPage in_arg2) ) && 
( beq_nat (InProceedings_getToPage in_arg1) (InProceedings_getToPage in_arg2) ) && 
( beq_string (InProceedings_getMonth in_arg1) (InProceedings_getMonth in_arg2) )
.

Definition beq_MastersThesis (ma_arg1 : MastersThesis) (ma_arg2 : MastersThesis) : bool :=
beq_Record (MastersThesis_getRecord ma_arg1) (MastersThesis_getRecord ma_arg2) &&
( beq_string (MastersThesis_getTitle ma_arg1) (MastersThesis_getTitle ma_arg2) ) && 
( beq_nat (MastersThesis_getYear ma_arg1) (MastersThesis_getYear ma_arg2) ) && 
( beq_string (MastersThesis_getMonth ma_arg1) (MastersThesis_getMonth ma_arg2) )
.

Definition beq_Proceedings (pr_arg1 : Proceedings) (pr_arg2 : Proceedings) : bool :=
beq_Record (Proceedings_getRecord pr_arg1) (Proceedings_getRecord pr_arg2) &&
( beq_string (Proceedings_getTitle pr_arg1) (Proceedings_getTitle pr_arg2) ) && 
( beq_nat (Proceedings_getYear pr_arg1) (Proceedings_getYear pr_arg2) ) && 
( beq_string (Proceedings_getMonth pr_arg1) (Proceedings_getMonth pr_arg2) ) && 
( beq_string (Proceedings_getIsbn pr_arg1) (Proceedings_getIsbn pr_arg2) )
.

Definition beq_PhDThesis (ph_arg1 : PhDThesis) (ph_arg2 : PhDThesis) : bool :=
beq_Record (PhDThesis_getRecord ph_arg1) (PhDThesis_getRecord ph_arg2) &&
( beq_string (PhDThesis_getTitle ph_arg1) (PhDThesis_getTitle ph_arg2) ) && 
( beq_nat (PhDThesis_getYear ph_arg1) (PhDThesis_getYear ph_arg2) ) && 
( beq_string (PhDThesis_getMonth ph_arg1) (PhDThesis_getMonth ph_arg2) )
.

Definition beq_Www (ww_arg1 : Www) (ww_arg2 : Www) : bool :=
beq_Record (Www_getRecord ww_arg1) (Www_getRecord ww_arg2) &&
( beq_string (Www_getTitle ww_arg1) (Www_getTitle ww_arg2) ) && 
( beq_nat (Www_getYear ww_arg1) (Www_getYear ww_arg2) ) && 
( beq_string (Www_getMonth ww_arg1) (Www_getMonth ww_arg2) )
.

Definition beq_Editor (ed_arg1 : Editor) (ed_arg2 : Editor) : bool :=
( beq_string (Editor_getName ed_arg1) (Editor_getName ed_arg2) )
.

Definition beq_Organization (or_arg1 : Organization) (or_arg2 : Organization) : bool :=
( beq_string (Organization_getName or_arg1) (Organization_getName or_arg2) )
.

Definition beq_Publisher (pu_arg1 : Publisher) (pu_arg2 : Publisher) : bool :=
( beq_string (Publisher_getName pu_arg1) (Publisher_getName pu_arg2) ) && 
( beq_string (Publisher_getAddress pu_arg1) (Publisher_getAddress pu_arg2) )
.

Definition beq_School (sc_arg1 : School) (sc_arg2 : School) : bool :=
( beq_string (School_getName sc_arg1) (School_getName sc_arg2) ) && 
( beq_string (School_getAddress sc_arg1) (School_getAddress sc_arg2) )
.


(* Meta-types *)	
Inductive DBLPMetamodel_Class : Set :=
  | RecordClass
  | ArticleClass
  | AuthorClass
  | JournalClass
  | BookClass
  | InCollectionClass
  | InProceedingsClass
  | MastersThesisClass
  | ProceedingsClass
  | PhDThesisClass
  | WwwClass
  | EditorClass
  | OrganizationClass
  | PublisherClass
  | SchoolClass
.

Definition DBLPMetamodel_getTypeByClass (dbcl_arg : DBLPMetamodel_Class) : Set :=
  match dbcl_arg with
    | RecordClass => Record
    | ArticleClass => Article
    | AuthorClass => Author
    | JournalClass => Journal
    | BookClass => Book
    | InCollectionClass => InCollection
    | InProceedingsClass => InProceedings
    | MastersThesisClass => MastersThesis
    | ProceedingsClass => Proceedings
    | PhDThesisClass => PhDThesis
    | WwwClass => Www
    | EditorClass => Editor
    | OrganizationClass => Organization
    | PublisherClass => Publisher
    | SchoolClass => School
  end.	

Inductive DBLPMetamodel_Reference : Set :=
| RecordAuthorsReference
| ArticleJournalReference
| AuthorRecordsReference
| JournalArticlesReference
| BookPublisherReference
| InCollectionEditorsReference
| InCollectionSponsoredByReference
| InCollectionPublisherReference
| InProceedingsEditorsReference
| InProceedingsOrganizationReference
| InProceedingsPublisherReference
| MastersThesisSchoolReference
| ProceedingsEditorsReference
| ProceedingsPublisherReference
| ProceedingsSponsoredByReference
| PhDThesisSchoolReference
| WwwEditorsReference
.

Definition DBLPMetamodel_getTypeByReference (dbre_arg : DBLPMetamodel_Reference) : Set :=
  match dbre_arg with
| RecordAuthorsReference => RecordAuthors
| ArticleJournalReference => ArticleJournal
| AuthorRecordsReference => AuthorRecords
| JournalArticlesReference => JournalArticles
| BookPublisherReference => BookPublisher
| InCollectionEditorsReference => InCollectionEditors
| InCollectionSponsoredByReference => InCollectionSponsoredBy
| InCollectionPublisherReference => InCollectionPublisher
| InProceedingsEditorsReference => InProceedingsEditors
| InProceedingsOrganizationReference => InProceedingsOrganization
| InProceedingsPublisherReference => InProceedingsPublisher
| MastersThesisSchoolReference => MastersThesisSchool
| ProceedingsEditorsReference => ProceedingsEditors
| ProceedingsPublisherReference => ProceedingsPublisher
| ProceedingsSponsoredByReference => ProceedingsSponsoredBy
| PhDThesisSchoolReference => PhDThesisSchool
| WwwEditorsReference => WwwEditors
  end.

Definition DBLPMetamodel_getERoleTypesByEReference (dbre_arg : DBLPMetamodel_Reference) : Set :=
  match dbre_arg with
| RecordAuthorsReference => (Record * list Author)
| ArticleJournalReference => (Article * Journal)
| AuthorRecordsReference => (Author * list Record)
| JournalArticlesReference => (Journal * list Article)
| BookPublisherReference => (Book * Publisher)
| InCollectionEditorsReference => (InCollection * list Editor)
| InCollectionSponsoredByReference => (InCollection * Organization)
| InCollectionPublisherReference => (InCollection * Publisher)
| InProceedingsEditorsReference => (InProceedings * list Editor)
| InProceedingsOrganizationReference => (InProceedings * Organization)
| InProceedingsPublisherReference => (InProceedings * Publisher)
| MastersThesisSchoolReference => (MastersThesis * School)
| ProceedingsEditorsReference => (Proceedings * list Editor)
| ProceedingsPublisherReference => (Proceedings * Publisher)
| ProceedingsSponsoredByReference => (Proceedings * list Organization)
| PhDThesisSchoolReference => (PhDThesis * School)
| WwwEditorsReference => (Www * list Editor)
  end.

(* Generic types *)			
Inductive DBLPMetamodel_Object : Set :=
 | Build_DBLPMetamodel_Object : 
    forall (dbcl_arg: DBLPMetamodel_Class), (DBLPMetamodel_getTypeByClass dbcl_arg) -> DBLPMetamodel_Object.

Definition beq_DBLPMetamodel_Object (c1 : DBLPMetamodel_Object) (c2 : DBLPMetamodel_Object) : bool :=
  match c1, c2 with
  | Build_DBLPMetamodel_Object RecordClass o1, Build_DBLPMetamodel_Object RecordClass o2 => beq_Record o1 o2
  | Build_DBLPMetamodel_Object ArticleClass o1, Build_DBLPMetamodel_Object ArticleClass o2 => beq_Article o1 o2
  | Build_DBLPMetamodel_Object AuthorClass o1, Build_DBLPMetamodel_Object AuthorClass o2 => beq_Author o1 o2
  | Build_DBLPMetamodel_Object JournalClass o1, Build_DBLPMetamodel_Object JournalClass o2 => beq_Journal o1 o2
  | Build_DBLPMetamodel_Object BookClass o1, Build_DBLPMetamodel_Object BookClass o2 => beq_Book o1 o2
  | Build_DBLPMetamodel_Object InCollectionClass o1, Build_DBLPMetamodel_Object InCollectionClass o2 => beq_InCollection o1 o2
  | Build_DBLPMetamodel_Object InProceedingsClass o1, Build_DBLPMetamodel_Object InProceedingsClass o2 => beq_InProceedings o1 o2
  | Build_DBLPMetamodel_Object MastersThesisClass o1, Build_DBLPMetamodel_Object MastersThesisClass o2 => beq_MastersThesis o1 o2
  | Build_DBLPMetamodel_Object ProceedingsClass o1, Build_DBLPMetamodel_Object ProceedingsClass o2 => beq_Proceedings o1 o2
  | Build_DBLPMetamodel_Object PhDThesisClass o1, Build_DBLPMetamodel_Object PhDThesisClass o2 => beq_PhDThesis o1 o2
  | Build_DBLPMetamodel_Object WwwClass o1, Build_DBLPMetamodel_Object WwwClass o2 => beq_Www o1 o2
  | Build_DBLPMetamodel_Object EditorClass o1, Build_DBLPMetamodel_Object EditorClass o2 => beq_Editor o1 o2
  | Build_DBLPMetamodel_Object OrganizationClass o1, Build_DBLPMetamodel_Object OrganizationClass o2 => beq_Organization o1 o2
  | Build_DBLPMetamodel_Object PublisherClass o1, Build_DBLPMetamodel_Object PublisherClass o2 => beq_Publisher o1 o2
  | Build_DBLPMetamodel_Object SchoolClass o1, Build_DBLPMetamodel_Object SchoolClass o2 => beq_School o1 o2
  | _, _ => false
  end.

Inductive DBLPMetamodel_Link : Set :=
 | Build_DBLPMetamodel_Link : 
    forall (dbre_arg:DBLPMetamodel_Reference), (DBLPMetamodel_getTypeByReference dbre_arg) -> DBLPMetamodel_Link.

(* TODO *)
Definition beq_DBLPMetamodel_Link (l1 : DBLPMetamodel_Link) (l2 : DBLPMetamodel_Link) : bool := true.

(* Reflective functions *)
Lemma DBLPMetamodel_eqEClass_dec : 
 forall (dbcl_arg1:DBLPMetamodel_Class) (dbcl_arg2:DBLPMetamodel_Class), { dbcl_arg1 = dbcl_arg2 } + { dbcl_arg1 <> dbcl_arg2 }.
Proof. repeat decide equality. Defined.

Lemma DBLPMetamodel_eqEReference_dec : 
 forall (dbre_arg1:DBLPMetamodel_Reference) (dbre_arg2:DBLPMetamodel_Reference), { dbre_arg1 = dbre_arg2 } + { dbre_arg1 <> dbre_arg2 }.
Proof. repeat decide equality. Defined.

Definition DBLPMetamodel_getEClass (dbob_arg : DBLPMetamodel_Object) : DBLPMetamodel_Class :=
   match dbob_arg with
  | (Build_DBLPMetamodel_Object dbob_arg _) => dbob_arg
   end.

Definition DBLPMetamodel_getEReference (dbli_arg : DBLPMetamodel_Link) : DBLPMetamodel_Reference :=
   match dbli_arg with
  | (Build_DBLPMetamodel_Link dbli_arg _) => dbli_arg
   end.

Definition DBLPMetamodel_instanceOfEClass (dbcl_arg: DBLPMetamodel_Class) (dbob_arg : DBLPMetamodel_Object): bool :=
  if DBLPMetamodel_eqEClass_dec (DBLPMetamodel_getEClass dbob_arg) dbcl_arg then true else false.

Definition DBLPMetamodel_instanceOfEReference (dbre_arg: DBLPMetamodel_Reference) (dbli_arg : DBLPMetamodel_Link): bool :=
  if DBLPMetamodel_eqEReference_dec (DBLPMetamodel_getEReference dbli_arg) dbre_arg then true else false.


Definition DBLPMetamodel_toClass (dbcl_arg : DBLPMetamodel_Class) (dbob_arg : DBLPMetamodel_Object) : option (DBLPMetamodel_getTypeByClass dbcl_arg).
Proof.
  destruct dbob_arg as [arg1 arg2].
  destruct (DBLPMetamodel_eqEClass_dec arg1 dbcl_arg) as [e|] eqn:dec_case.
  - rewrite e in arg2.
    exact (Some arg2).
  - exact None.
Defined.

Definition DBLPMetamodel_toReference (dbre_arg : DBLPMetamodel_Reference) (dbli_arg : DBLPMetamodel_Link) : option (DBLPMetamodel_getTypeByReference dbre_arg).
Proof.
  destruct dbli_arg as [arg1 arg2].
  destruct (DBLPMetamodel_eqEReference_dec arg1 dbre_arg) as [e|] eqn:dec_case.
  - rewrite e in arg2.
  	exact (Some arg2).
  - exact None.
Defined.

(* Generic functions *)
Definition DBLPModel := Model DBLPMetamodel_Object DBLPMetamodel_Link.

Definition DBLPMetamodel_toObject (dbcl_arg: DBLPMetamodel_Class) (t: DBLPMetamodel_getTypeByClass dbcl_arg) : DBLPMetamodel_Object :=
  (Build_DBLPMetamodel_Object dbcl_arg t).

Definition DBLPMetamodel_toLink (dbre_arg: DBLPMetamodel_Reference) (t: DBLPMetamodel_getTypeByReference dbre_arg) : DBLPMetamodel_Link :=
  (Build_DBLPMetamodel_Link dbre_arg t).


Fixpoint DBLPMetamodel_Record_downcastArticle (re_arg : Record) (l : list DBLPMetamodel_Object) : option Article := 
  match l with
	 | Build_DBLPMetamodel_Object ArticleClass (BuildArticle eSuper title fromPage toPage number volume month year ) :: l' => 
		if beq_Record re_arg eSuper then (Some (BuildArticle eSuper title fromPage toPage number volume month year )) else (DBLPMetamodel_Record_downcastArticle re_arg l')
	 | _ :: l' => (DBLPMetamodel_Record_downcastArticle re_arg l')
	 | nil => None
end.

Definition Record_downcastArticle (re_arg : Record) (m : DBLPModel) : option Article :=
  DBLPMetamodel_Record_downcastArticle re_arg (@allModelElements _ _ m).

Fixpoint DBLPMetamodel_Record_downcastBook (re_arg : Record) (l : list DBLPMetamodel_Object) : option Book := 
  match l with
	 | Build_DBLPMetamodel_Object BookClass (BuildBook eSuper title year month volume series edition isbn ) :: l' => 
		if beq_Record re_arg eSuper then (Some (BuildBook eSuper title year month volume series edition isbn )) else (DBLPMetamodel_Record_downcastBook re_arg l')
	 | _ :: l' => (DBLPMetamodel_Record_downcastBook re_arg l')
	 | nil => None
end.

Definition Record_downcastBook (re_arg : Record) (m : DBLPModel) : option Book :=
  DBLPMetamodel_Record_downcastBook re_arg (@allModelElements _ _ m).

Fixpoint DBLPMetamodel_Record_downcastInCollection (re_arg : Record) (l : list DBLPMetamodel_Object) : option InCollection := 
  match l with
	 | Build_DBLPMetamodel_Object InCollectionClass (BuildInCollection eSuper title bookTitle year fromPage toPage month ) :: l' => 
		if beq_Record re_arg eSuper then (Some (BuildInCollection eSuper title bookTitle year fromPage toPage month )) else (DBLPMetamodel_Record_downcastInCollection re_arg l')
	 | _ :: l' => (DBLPMetamodel_Record_downcastInCollection re_arg l')
	 | nil => None
end.

Definition Record_downcastInCollection (re_arg : Record) (m : DBLPModel) : option InCollection :=
  DBLPMetamodel_Record_downcastInCollection re_arg (@allModelElements _ _ m).

Fixpoint DBLPMetamodel_Record_downcastInProceedings (re_arg : Record) (l : list DBLPMetamodel_Object) : option InProceedings := 
  match l with
	 | Build_DBLPMetamodel_Object InProceedingsClass (BuildInProceedings eSuper title bootitle year fromPage toPage month ) :: l' => 
		if beq_Record re_arg eSuper then (Some (BuildInProceedings eSuper title bootitle year fromPage toPage month )) else (DBLPMetamodel_Record_downcastInProceedings re_arg l')
	 | _ :: l' => (DBLPMetamodel_Record_downcastInProceedings re_arg l')
	 | nil => None
end.

Definition Record_downcastInProceedings (re_arg : Record) (m : DBLPModel) : option InProceedings :=
  DBLPMetamodel_Record_downcastInProceedings re_arg (@allModelElements _ _ m).

Fixpoint DBLPMetamodel_Record_downcastMastersThesis (re_arg : Record) (l : list DBLPMetamodel_Object) : option MastersThesis := 
  match l with
	 | Build_DBLPMetamodel_Object MastersThesisClass (BuildMastersThesis eSuper title year month ) :: l' => 
		if beq_Record re_arg eSuper then (Some (BuildMastersThesis eSuper title year month )) else (DBLPMetamodel_Record_downcastMastersThesis re_arg l')
	 | _ :: l' => (DBLPMetamodel_Record_downcastMastersThesis re_arg l')
	 | nil => None
end.

Definition Record_downcastMastersThesis (re_arg : Record) (m : DBLPModel) : option MastersThesis :=
  DBLPMetamodel_Record_downcastMastersThesis re_arg (@allModelElements _ _ m).

Fixpoint DBLPMetamodel_Record_downcastProceedings (re_arg : Record) (l : list DBLPMetamodel_Object) : option Proceedings := 
  match l with
	 | Build_DBLPMetamodel_Object ProceedingsClass (BuildProceedings eSuper title year month isbn ) :: l' => 
		if beq_Record re_arg eSuper then (Some (BuildProceedings eSuper title year month isbn )) else (DBLPMetamodel_Record_downcastProceedings re_arg l')
	 | _ :: l' => (DBLPMetamodel_Record_downcastProceedings re_arg l')
	 | nil => None
end.

Definition Record_downcastProceedings (re_arg : Record) (m : DBLPModel) : option Proceedings :=
  DBLPMetamodel_Record_downcastProceedings re_arg (@allModelElements _ _ m).

Fixpoint DBLPMetamodel_Record_downcastPhDThesis (re_arg : Record) (l : list DBLPMetamodel_Object) : option PhDThesis := 
  match l with
	 | Build_DBLPMetamodel_Object PhDThesisClass (BuildPhDThesis eSuper title year month ) :: l' => 
		if beq_Record re_arg eSuper then (Some (BuildPhDThesis eSuper title year month )) else (DBLPMetamodel_Record_downcastPhDThesis re_arg l')
	 | _ :: l' => (DBLPMetamodel_Record_downcastPhDThesis re_arg l')
	 | nil => None
end.

Definition Record_downcastPhDThesis (re_arg : Record) (m : DBLPModel) : option PhDThesis :=
  DBLPMetamodel_Record_downcastPhDThesis re_arg (@allModelElements _ _ m).

Fixpoint DBLPMetamodel_Record_downcastWww (re_arg : Record) (l : list DBLPMetamodel_Object) : option Www := 
  match l with
	 | Build_DBLPMetamodel_Object WwwClass (BuildWww eSuper title year month ) :: l' => 
		if beq_Record re_arg eSuper then (Some (BuildWww eSuper title year month )) else (DBLPMetamodel_Record_downcastWww re_arg l')
	 | _ :: l' => (DBLPMetamodel_Record_downcastWww re_arg l')
	 | nil => None
end.

Definition Record_downcastWww (re_arg : Record) (m : DBLPModel) : option Www :=
  DBLPMetamodel_Record_downcastWww re_arg (@allModelElements _ _ m).




Fixpoint Record_getAuthorsOnLinks (re_arg : Record) (l : list DBLPMetamodel_Link) : option (list Author) :=
match l with
| (Build_DBLPMetamodel_Link RecordAuthorsReference (BuildRecordAuthors Record_ctr authors_ctr)) :: l' => 
	  if beq_Record Record_ctr re_arg then Some authors_ctr else Record_getAuthorsOnLinks re_arg l'
| _ :: l' => Record_getAuthorsOnLinks re_arg l'
| nil => None
end.

Definition Record_getAuthors (re_arg : Record) (m : DBLPModel) : option (list Author) :=
  Record_getAuthorsOnLinks re_arg (@allModelLinks _ _ m).
  
Definition Record_getAuthorsObjects (re_arg : Record) (m : DBLPModel) : option (list DBLPMetamodel_Object) :=
  match Record_getAuthors re_arg m with
  | Some l => Some (map (DBLPMetamodel_toObject AuthorClass) l)
  | _ => None
  end.

Fixpoint Article_getJournalOnLinks (ar_arg : Article) (l : list DBLPMetamodel_Link) : option (Journal) :=
match l with
| (Build_DBLPMetamodel_Link ArticleJournalReference (BuildArticleJournal Article_ctr journal_ctr)) :: l' => 
	  if beq_Article Article_ctr ar_arg then Some journal_ctr else Article_getJournalOnLinks ar_arg l'
| _ :: l' => Article_getJournalOnLinks ar_arg l'
| nil => None
end.

Definition Article_getJournal (ar_arg : Article) (m : DBLPModel) : option (Journal) :=
  Article_getJournalOnLinks ar_arg (@allModelLinks _ _ m).
  
Definition Article_getJournalObject (ar_arg : Article) (m : DBLPModel) : option (DBLPMetamodel_Object) :=
  match Article_getJournal ar_arg m with
  | Some jo_arg => Some (DBLPMetamodel_toObject JournalClass jo_arg) 
  | _ => None
  end.

Fixpoint Author_getRecordsOnLinks (au_arg : Author) (l : list DBLPMetamodel_Link) : option (list Record) :=
match l with
| (Build_DBLPMetamodel_Link AuthorRecordsReference (BuildAuthorRecords Author_ctr records_ctr)) :: l' => 
	  if beq_Author Author_ctr au_arg then Some records_ctr else Author_getRecordsOnLinks au_arg l'
| _ :: l' => Author_getRecordsOnLinks au_arg l'
| nil => None
end.

Definition Author_getRecords (au_arg : Author) (m : DBLPModel) : option (list Record) :=
  Author_getRecordsOnLinks au_arg (@allModelLinks _ _ m).
  
Definition Author_getRecordsObjects (au_arg : Author) (m : DBLPModel) : option (list DBLPMetamodel_Object) :=
  match Author_getRecords au_arg m with
  | Some l => Some (map (DBLPMetamodel_toObject RecordClass) l)
  | _ => None
  end.

Fixpoint Journal_getArticlesOnLinks (jo_arg : Journal) (l : list DBLPMetamodel_Link) : option (list Article) :=
match l with
| (Build_DBLPMetamodel_Link JournalArticlesReference (BuildJournalArticles Journal_ctr articles_ctr)) :: l' => 
	  if beq_Journal Journal_ctr jo_arg then Some articles_ctr else Journal_getArticlesOnLinks jo_arg l'
| _ :: l' => Journal_getArticlesOnLinks jo_arg l'
| nil => None
end.

Definition Journal_getArticles (jo_arg : Journal) (m : DBLPModel) : option (list Article) :=
  Journal_getArticlesOnLinks jo_arg (@allModelLinks _ _ m).
  
Definition Journal_getArticlesObjects (jo_arg : Journal) (m : DBLPModel) : option (list DBLPMetamodel_Object) :=
  match Journal_getArticles jo_arg m with
  | Some l => Some (map (DBLPMetamodel_toObject ArticleClass) l)
  | _ => None
  end.

Fixpoint Book_getPublisherOnLinks (bo_arg : Book) (l : list DBLPMetamodel_Link) : option (Publisher) :=
match l with
| (Build_DBLPMetamodel_Link BookPublisherReference (BuildBookPublisher Book_ctr publisher_ctr)) :: l' => 
	  if beq_Book Book_ctr bo_arg then Some publisher_ctr else Book_getPublisherOnLinks bo_arg l'
| _ :: l' => Book_getPublisherOnLinks bo_arg l'
| nil => None
end.

Definition Book_getPublisher (bo_arg : Book) (m : DBLPModel) : option (Publisher) :=
  Book_getPublisherOnLinks bo_arg (@allModelLinks _ _ m).
  
Definition Book_getPublisherObject (bo_arg : Book) (m : DBLPModel) : option (DBLPMetamodel_Object) :=
  match Book_getPublisher bo_arg m with
  | Some pu_arg => Some (DBLPMetamodel_toObject PublisherClass pu_arg) 
  | _ => None
  end.

Fixpoint InCollection_getEditorsOnLinks (in_arg : InCollection) (l : list DBLPMetamodel_Link) : option (list Editor) :=
match l with
| (Build_DBLPMetamodel_Link InCollectionEditorsReference (BuildInCollectionEditors InCollection_ctr editors_ctr)) :: l' => 
	  if beq_InCollection InCollection_ctr in_arg then Some editors_ctr else InCollection_getEditorsOnLinks in_arg l'
| _ :: l' => InCollection_getEditorsOnLinks in_arg l'
| nil => None
end.

Definition InCollection_getEditors (in_arg : InCollection) (m : DBLPModel) : option (list Editor) :=
  InCollection_getEditorsOnLinks in_arg (@allModelLinks _ _ m).
  
Definition InCollection_getEditorsObjects (in_arg : InCollection) (m : DBLPModel) : option (list DBLPMetamodel_Object) :=
  match InCollection_getEditors in_arg m with
  | Some l => Some (map (DBLPMetamodel_toObject EditorClass) l)
  | _ => None
  end.
Fixpoint InCollection_getSponsoredByOnLinks (in_arg : InCollection) (l : list DBLPMetamodel_Link) : option (Organization) :=
match l with
| (Build_DBLPMetamodel_Link InCollectionSponsoredByReference (BuildInCollectionSponsoredBy InCollection_ctr sponsoredBy_ctr)) :: l' => 
	  if beq_InCollection InCollection_ctr in_arg then Some sponsoredBy_ctr else InCollection_getSponsoredByOnLinks in_arg l'
| _ :: l' => InCollection_getSponsoredByOnLinks in_arg l'
| nil => None
end.

Definition InCollection_getSponsoredBy (in_arg : InCollection) (m : DBLPModel) : option (Organization) :=
  InCollection_getSponsoredByOnLinks in_arg (@allModelLinks _ _ m).
  
Definition InCollection_getSponsoredByObject (in_arg : InCollection) (m : DBLPModel) : option (DBLPMetamodel_Object) :=
  match InCollection_getSponsoredBy in_arg m with
  | Some or_arg => Some (DBLPMetamodel_toObject OrganizationClass or_arg) 
  | _ => None
  end.
Fixpoint InCollection_getPublisherOnLinks (in_arg : InCollection) (l : list DBLPMetamodel_Link) : option (Publisher) :=
match l with
| (Build_DBLPMetamodel_Link InCollectionPublisherReference (BuildInCollectionPublisher InCollection_ctr publisher_ctr)) :: l' => 
	  if beq_InCollection InCollection_ctr in_arg then Some publisher_ctr else InCollection_getPublisherOnLinks in_arg l'
| _ :: l' => InCollection_getPublisherOnLinks in_arg l'
| nil => None
end.

Definition InCollection_getPublisher (in_arg : InCollection) (m : DBLPModel) : option (Publisher) :=
  InCollection_getPublisherOnLinks in_arg (@allModelLinks _ _ m).
  
Definition InCollection_getPublisherObject (in_arg : InCollection) (m : DBLPModel) : option (DBLPMetamodel_Object) :=
  match InCollection_getPublisher in_arg m with
  | Some pu_arg => Some (DBLPMetamodel_toObject PublisherClass pu_arg) 
  | _ => None
  end.

Fixpoint InProceedings_getEditorsOnLinks (in_arg : InProceedings) (l : list DBLPMetamodel_Link) : option (list Editor) :=
match l with
| (Build_DBLPMetamodel_Link InProceedingsEditorsReference (BuildInProceedingsEditors InProceedings_ctr editors_ctr)) :: l' => 
	  if beq_InProceedings InProceedings_ctr in_arg then Some editors_ctr else InProceedings_getEditorsOnLinks in_arg l'
| _ :: l' => InProceedings_getEditorsOnLinks in_arg l'
| nil => None
end.

Definition InProceedings_getEditors (in_arg : InProceedings) (m : DBLPModel) : option (list Editor) :=
  InProceedings_getEditorsOnLinks in_arg (@allModelLinks _ _ m).
  
Definition InProceedings_getEditorsObjects (in_arg : InProceedings) (m : DBLPModel) : option (list DBLPMetamodel_Object) :=
  match InProceedings_getEditors in_arg m with
  | Some l => Some (map (DBLPMetamodel_toObject EditorClass) l)
  | _ => None
  end.
Fixpoint InProceedings_getOrganizationOnLinks (in_arg : InProceedings) (l : list DBLPMetamodel_Link) : option (Organization) :=
match l with
| (Build_DBLPMetamodel_Link InProceedingsOrganizationReference (BuildInProceedingsOrganization InProceedings_ctr organization_ctr)) :: l' => 
	  if beq_InProceedings InProceedings_ctr in_arg then Some organization_ctr else InProceedings_getOrganizationOnLinks in_arg l'
| _ :: l' => InProceedings_getOrganizationOnLinks in_arg l'
| nil => None
end.

Definition InProceedings_getOrganization (in_arg : InProceedings) (m : DBLPModel) : option (Organization) :=
  InProceedings_getOrganizationOnLinks in_arg (@allModelLinks _ _ m).
  
Definition InProceedings_getOrganizationObject (in_arg : InProceedings) (m : DBLPModel) : option (DBLPMetamodel_Object) :=
  match InProceedings_getOrganization in_arg m with
  | Some or_arg => Some (DBLPMetamodel_toObject OrganizationClass or_arg) 
  | _ => None
  end.
Fixpoint InProceedings_getPublisherOnLinks (in_arg : InProceedings) (l : list DBLPMetamodel_Link) : option (Publisher) :=
match l with
| (Build_DBLPMetamodel_Link InProceedingsPublisherReference (BuildInProceedingsPublisher InProceedings_ctr publisher_ctr)) :: l' => 
	  if beq_InProceedings InProceedings_ctr in_arg then Some publisher_ctr else InProceedings_getPublisherOnLinks in_arg l'
| _ :: l' => InProceedings_getPublisherOnLinks in_arg l'
| nil => None
end.

Definition InProceedings_getPublisher (in_arg : InProceedings) (m : DBLPModel) : option (Publisher) :=
  InProceedings_getPublisherOnLinks in_arg (@allModelLinks _ _ m).
  
Definition InProceedings_getPublisherObject (in_arg : InProceedings) (m : DBLPModel) : option (DBLPMetamodel_Object) :=
  match InProceedings_getPublisher in_arg m with
  | Some pu_arg => Some (DBLPMetamodel_toObject PublisherClass pu_arg) 
  | _ => None
  end.

Fixpoint MastersThesis_getSchoolOnLinks (ma_arg : MastersThesis) (l : list DBLPMetamodel_Link) : option (School) :=
match l with
| (Build_DBLPMetamodel_Link MastersThesisSchoolReference (BuildMastersThesisSchool MastersThesis_ctr school_ctr)) :: l' => 
	  if beq_MastersThesis MastersThesis_ctr ma_arg then Some school_ctr else MastersThesis_getSchoolOnLinks ma_arg l'
| _ :: l' => MastersThesis_getSchoolOnLinks ma_arg l'
| nil => None
end.

Definition MastersThesis_getSchool (ma_arg : MastersThesis) (m : DBLPModel) : option (School) :=
  MastersThesis_getSchoolOnLinks ma_arg (@allModelLinks _ _ m).
  
Definition MastersThesis_getSchoolObject (ma_arg : MastersThesis) (m : DBLPModel) : option (DBLPMetamodel_Object) :=
  match MastersThesis_getSchool ma_arg m with
  | Some sc_arg => Some (DBLPMetamodel_toObject SchoolClass sc_arg) 
  | _ => None
  end.

Fixpoint Proceedings_getEditorsOnLinks (pr_arg : Proceedings) (l : list DBLPMetamodel_Link) : option (list Editor) :=
match l with
| (Build_DBLPMetamodel_Link ProceedingsEditorsReference (BuildProceedingsEditors Proceedings_ctr editors_ctr)) :: l' => 
	  if beq_Proceedings Proceedings_ctr pr_arg then Some editors_ctr else Proceedings_getEditorsOnLinks pr_arg l'
| _ :: l' => Proceedings_getEditorsOnLinks pr_arg l'
| nil => None
end.

Definition Proceedings_getEditors (pr_arg : Proceedings) (m : DBLPModel) : option (list Editor) :=
  Proceedings_getEditorsOnLinks pr_arg (@allModelLinks _ _ m).
  
Definition Proceedings_getEditorsObjects (pr_arg : Proceedings) (m : DBLPModel) : option (list DBLPMetamodel_Object) :=
  match Proceedings_getEditors pr_arg m with
  | Some l => Some (map (DBLPMetamodel_toObject EditorClass) l)
  | _ => None
  end.
Fixpoint Proceedings_getPublisherOnLinks (pr_arg : Proceedings) (l : list DBLPMetamodel_Link) : option (Publisher) :=
match l with
| (Build_DBLPMetamodel_Link ProceedingsPublisherReference (BuildProceedingsPublisher Proceedings_ctr publisher_ctr)) :: l' => 
	  if beq_Proceedings Proceedings_ctr pr_arg then Some publisher_ctr else Proceedings_getPublisherOnLinks pr_arg l'
| _ :: l' => Proceedings_getPublisherOnLinks pr_arg l'
| nil => None
end.

Definition Proceedings_getPublisher (pr_arg : Proceedings) (m : DBLPModel) : option (Publisher) :=
  Proceedings_getPublisherOnLinks pr_arg (@allModelLinks _ _ m).
  
Definition Proceedings_getPublisherObject (pr_arg : Proceedings) (m : DBLPModel) : option (DBLPMetamodel_Object) :=
  match Proceedings_getPublisher pr_arg m with
  | Some pu_arg => Some (DBLPMetamodel_toObject PublisherClass pu_arg) 
  | _ => None
  end.
Fixpoint Proceedings_getSponsoredByOnLinks (pr_arg : Proceedings) (l : list DBLPMetamodel_Link) : option (list Organization) :=
match l with
| (Build_DBLPMetamodel_Link ProceedingsSponsoredByReference (BuildProceedingsSponsoredBy Proceedings_ctr sponsoredBy_ctr)) :: l' => 
	  if beq_Proceedings Proceedings_ctr pr_arg then Some sponsoredBy_ctr else Proceedings_getSponsoredByOnLinks pr_arg l'
| _ :: l' => Proceedings_getSponsoredByOnLinks pr_arg l'
| nil => None
end.

Definition Proceedings_getSponsoredBy (pr_arg : Proceedings) (m : DBLPModel) : option (list Organization) :=
  Proceedings_getSponsoredByOnLinks pr_arg (@allModelLinks _ _ m).
  
Definition Proceedings_getSponsoredByObjects (pr_arg : Proceedings) (m : DBLPModel) : option (list DBLPMetamodel_Object) :=
  match Proceedings_getSponsoredBy pr_arg m with
  | Some l => Some (map (DBLPMetamodel_toObject OrganizationClass) l)
  | _ => None
  end.

Fixpoint PhDThesis_getSchoolOnLinks (ph_arg : PhDThesis) (l : list DBLPMetamodel_Link) : option (School) :=
match l with
| (Build_DBLPMetamodel_Link PhDThesisSchoolReference (BuildPhDThesisSchool PhDThesis_ctr school_ctr)) :: l' => 
	  if beq_PhDThesis PhDThesis_ctr ph_arg then Some school_ctr else PhDThesis_getSchoolOnLinks ph_arg l'
| _ :: l' => PhDThesis_getSchoolOnLinks ph_arg l'
| nil => None
end.

Definition PhDThesis_getSchool (ph_arg : PhDThesis) (m : DBLPModel) : option (School) :=
  PhDThesis_getSchoolOnLinks ph_arg (@allModelLinks _ _ m).
  
Definition PhDThesis_getSchoolObject (ph_arg : PhDThesis) (m : DBLPModel) : option (DBLPMetamodel_Object) :=
  match PhDThesis_getSchool ph_arg m with
  | Some sc_arg => Some (DBLPMetamodel_toObject SchoolClass sc_arg) 
  | _ => None
  end.

Fixpoint Www_getEditorsOnLinks (ww_arg : Www) (l : list DBLPMetamodel_Link) : option (list Editor) :=
match l with
| (Build_DBLPMetamodel_Link WwwEditorsReference (BuildWwwEditors Www_ctr editors_ctr)) :: l' => 
	  if beq_Www Www_ctr ww_arg then Some editors_ctr else Www_getEditorsOnLinks ww_arg l'
| _ :: l' => Www_getEditorsOnLinks ww_arg l'
| nil => None
end.

Definition Www_getEditors (ww_arg : Www) (m : DBLPModel) : option (list Editor) :=
  Www_getEditorsOnLinks ww_arg (@allModelLinks _ _ m).
  
Definition Www_getEditorsObjects (ww_arg : Www) (m : DBLPModel) : option (list DBLPMetamodel_Object) :=
  match Www_getEditors ww_arg m with
  | Some l => Some (map (DBLPMetamodel_toObject EditorClass) l)
  | _ => None
  end.






(* Typeclass Instances *)	
Instance DBLPMetamodel_ElementSum : Sum DBLPMetamodel_Object DBLPMetamodel_Class :=
{
	denoteSubType := DBLPMetamodel_getTypeByClass;
	toSubType := DBLPMetamodel_toClass;
	toSumType := DBLPMetamodel_toObject;
}.

Instance DBLPMetamodel_LinkSum : Sum DBLPMetamodel_Link DBLPMetamodel_Reference :=
{
	denoteSubType := DBLPMetamodel_getTypeByReference;
	toSubType := DBLPMetamodel_toReference;
	toSumType := DBLPMetamodel_toLink;
}.

Instance DBLPMetamodel_EqDec : EqDec DBLPMetamodel_Object := {
    eq_b := beq_DBLPMetamodel_Object;
}.

Instance DBLPMetamodel_Metamodel_Instance : 
	Metamodel :=
{
	ModelElement := DBLPMetamodel_Object;
	ModelLink := DBLPMetamodel_Link;
}.

Instance DBLPMetamodel_ModelingMetamodel_Instance : 
	ModelingMetamodel DBLPMetamodel_Metamodel_Instance :=
{ 
    elements := DBLPMetamodel_ElementSum;
    links := DBLPMetamodel_LinkSum; 
}.

(* Useful lemmas *)

Lemma DBLP_invert : 
  forall (dbcl_arg: DBLPMetamodel_Class) (t1 t2: DBLPMetamodel_getTypeByClass dbcl_arg), 
    Build_DBLPMetamodel_Object dbcl_arg t1 = Build_DBLPMetamodel_Object dbcl_arg t2 -> t1 = t2.
Admitted.
