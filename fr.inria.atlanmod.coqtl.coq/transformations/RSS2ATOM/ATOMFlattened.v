

(********************************************************************
	@name Coq declarations for metamodel: <ATOM>
	@date 2021/11/02 10:10:52
	@description Automatically generated by Ecore2Coq transformation.
 ********************************************************************)

(* Coq libraries *)
Require Import String.
Require Import Bool.
Require Import List.      (* sequence *)
Require Import Multiset.  (* bag *)
Require Import ListSet.   (* set *)
Require Import PeanoNat.
Require Import EqNat.
Require Import Coq.Logic.Eqdep_dec.
Scheme Equality for option. (* equality for option type *)

Require Import core.EqDec.
Require Import core.utils.Utils.
Require Import core.Metamodel.
Require Import core.modeling.ModelingMetamodel.
Require Import core.Model.
Require Import core.utils.CpdtTactics.

(* Base types *)


Inductive ATOM : Set :=
  BuildATOM :
  (* title *)  string ->
  (* id *)  string ->
  (* subtitle *)  option  string ->
  (* rights *)  option  string ->
  (* icon *)  option  string ->
  (* logo *)  option  string ->
  (* lastUpdate *)  string ->
  ATOM.

Inductive Entry : Set :=
  BuildEntry :
  (* title *)  string ->
  (* id *)  string ->
  (* rights *)  option  string ->
  (* summary *)  option  string ->
  (* published *)  option  string ->
  (* lastUpdate *)  string ->
  Entry.

Inductive Source : Set :=
  BuildSource :
  (* id *)  option  string ->
  (* icon *)  option  string ->
  (* logo *)  option  string ->
  (* rights *)  option  string ->
  (* title *)  option  string ->
  (* subtitle *)  option  string ->
  (* lastUpdate *)  option  string ->
  Source.

Inductive Content : Set :=
  BuildContent :
  (* type *)  option  string ->
  (* mode *)  option  string ->
  (* text *)  option  string ->
  Content.

Inductive Generator : Set :=
  BuildGenerator :
  (* uri *)  option  string ->
  (* version *)  option  string ->
  (* name *)  string ->
  Generator.

Inductive Category : Set :=
  BuildCategory :
  (* term *)  string ->
  (* scheme *)  option  string ->
  (* label *)  option  string ->
  Category.

Inductive Link : Set :=
  BuildLink :
  (* rel *)  option  string ->
  (* hrefl *)  option  string ->
  (* type *)  option  string ->
  (* hreflang *)  option  string ->
  (* title *)  option  string ->
  (* lenght *)  option  nat ->
  Link.

Inductive Author : Set :=
  BuildAuthor :
  (* name *)  string ->
  (* uri *)  option  string ->
  (* email *)  option  string ->
  Author.

Inductive Contributor : Set :=
  BuildContributor :
  (* name *)  string ->
  (* uri *)  option  string ->
  (* email *)  option  string ->
  Contributor.


Inductive ATOMLinks : Set :=
   BuildATOMLinks :
   ATOM ->
   list Link ->
   ATOMLinks.

Definition maybeBuildATOMLinks (at_arg: ATOM) (li_arg: option (list Link)) : option ATOMLinks :=
  match at_arg, li_arg with
  | at_arg_succ, Some li_arg_succ => Some (BuildATOMLinks at_arg_succ li_arg_succ)
  | _, _ => None
  end.
Inductive ATOMGenerator : Set :=
   BuildATOMGenerator :
   ATOM ->
   Generator ->
   ATOMGenerator.

Definition maybeBuildATOMGenerator (at_arg: ATOM) (ge_arg: option (Generator)) : option ATOMGenerator :=
  match at_arg, ge_arg with
  | at_arg_succ, Some ge_arg_succ => Some (BuildATOMGenerator at_arg_succ ge_arg_succ)
  | _, _ => None
  end.
Inductive ATOMCategories : Set :=
   BuildATOMCategories :
   ATOM ->
   list Category ->
   ATOMCategories.

Definition maybeBuildATOMCategories (at_arg: ATOM) (ca_arg: option (list Category)) : option ATOMCategories :=
  match at_arg, ca_arg with
  | at_arg_succ, Some ca_arg_succ => Some (BuildATOMCategories at_arg_succ ca_arg_succ)
  | _, _ => None
  end.
Inductive ATOMAuthors : Set :=
   BuildATOMAuthors :
   ATOM ->
   list Author ->
   ATOMAuthors.

Definition maybeBuildATOMAuthors (at_arg: ATOM) (au_arg: option (list Author)) : option ATOMAuthors :=
  match at_arg, au_arg with
  | at_arg_succ, Some au_arg_succ => Some (BuildATOMAuthors at_arg_succ au_arg_succ)
  | _, _ => None
  end.
Inductive ATOMContributors : Set :=
   BuildATOMContributors :
   ATOM ->
   list Contributor ->
   ATOMContributors.

Definition maybeBuildATOMContributors (at_arg: ATOM) (co_arg: option (list Contributor)) : option ATOMContributors :=
  match at_arg, co_arg with
  | at_arg_succ, Some co_arg_succ => Some (BuildATOMContributors at_arg_succ co_arg_succ)
  | _, _ => None
  end.
Inductive ATOMEntrie : Set :=
   BuildATOMEntrie :
   ATOM ->
   list Entry ->
   ATOMEntrie.

Definition maybeBuildATOMEntrie (at_arg: ATOM) (en_arg: option (list Entry)) : option ATOMEntrie :=
  match at_arg, en_arg with
  | at_arg_succ, Some en_arg_succ => Some (BuildATOMEntrie at_arg_succ en_arg_succ)
  | _, _ => None
  end.

Inductive EntryLinks : Set :=
   BuildEntryLinks :
   Entry ->
   list Link ->
   EntryLinks.

Definition maybeBuildEntryLinks (en_arg: Entry) (li_arg: option (list Link)) : option EntryLinks :=
  match en_arg, li_arg with
  | en_arg_succ, Some li_arg_succ => Some (BuildEntryLinks en_arg_succ li_arg_succ)
  | _, _ => None
  end.
Inductive EntrySource : Set :=
   BuildEntrySource :
   Entry ->
   Source ->
   EntrySource.

Definition maybeBuildEntrySource (en_arg: Entry) (so_arg: option (Source)) : option EntrySource :=
  match en_arg, so_arg with
  | en_arg_succ, Some so_arg_succ => Some (BuildEntrySource en_arg_succ so_arg_succ)
  | _, _ => None
  end.
Inductive EntryContent : Set :=
   BuildEntryContent :
   Entry ->
   Content ->
   EntryContent.

Definition maybeBuildEntryContent (en_arg: Entry) (co_arg: option (Content)) : option EntryContent :=
  match en_arg, co_arg with
  | en_arg_succ, Some co_arg_succ => Some (BuildEntryContent en_arg_succ co_arg_succ)
  | _, _ => None
  end.
Inductive EntryCategories : Set :=
   BuildEntryCategories :
   Entry ->
   list Category ->
   EntryCategories.

Definition maybeBuildEntryCategories (en_arg: Entry) (ca_arg: option (list Category)) : option EntryCategories :=
  match en_arg, ca_arg with
  | en_arg_succ, Some ca_arg_succ => Some (BuildEntryCategories en_arg_succ ca_arg_succ)
  | _, _ => None
  end.
Inductive EntryAuthors : Set :=
   BuildEntryAuthors :
   Entry ->
   list Author ->
   EntryAuthors.

Definition maybeBuildEntryAuthors (en_arg: Entry) (au_arg: option (list Author)) : option EntryAuthors :=
  match en_arg, au_arg with
  | en_arg_succ, Some au_arg_succ => Some (BuildEntryAuthors en_arg_succ au_arg_succ)
  | _, _ => None
  end.
Inductive EntryContributors : Set :=
   BuildEntryContributors :
   Entry ->
   list Contributor ->
   EntryContributors.

Definition maybeBuildEntryContributors (en_arg: Entry) (co_arg: option (list Contributor)) : option EntryContributors :=
  match en_arg, co_arg with
  | en_arg_succ, Some co_arg_succ => Some (BuildEntryContributors en_arg_succ co_arg_succ)
  | _, _ => None
  end.
Inductive EntryAtom : Set :=
   BuildEntryAtom :
   Entry ->
   ATOM ->
   EntryAtom.

Definition maybeBuildEntryAtom (en_arg: Entry) (at_arg: option (ATOM)) : option EntryAtom :=
  match en_arg, at_arg with
  | en_arg_succ, Some at_arg_succ => Some (BuildEntryAtom en_arg_succ at_arg_succ)
  | _, _ => None
  end.

Inductive SourceLinks : Set :=
   BuildSourceLinks :
   Source ->
   list Link ->
   SourceLinks.

Definition maybeBuildSourceLinks (so_arg: Source) (li_arg: option (list Link)) : option SourceLinks :=
  match so_arg, li_arg with
  | so_arg_succ, Some li_arg_succ => Some (BuildSourceLinks so_arg_succ li_arg_succ)
  | _, _ => None
  end.
Inductive SourceGenerator : Set :=
   BuildSourceGenerator :
   Source ->
   Generator ->
   SourceGenerator.

Definition maybeBuildSourceGenerator (so_arg: Source) (ge_arg: option (Generator)) : option SourceGenerator :=
  match so_arg, ge_arg with
  | so_arg_succ, Some ge_arg_succ => Some (BuildSourceGenerator so_arg_succ ge_arg_succ)
  | _, _ => None
  end.
Inductive SourceContributors : Set :=
   BuildSourceContributors :
   Source ->
   list Contributor ->
   SourceContributors.

Definition maybeBuildSourceContributors (so_arg: Source) (co_arg: option (list Contributor)) : option SourceContributors :=
  match so_arg, co_arg with
  | so_arg_succ, Some co_arg_succ => Some (BuildSourceContributors so_arg_succ co_arg_succ)
  | _, _ => None
  end.
Inductive SourceCategories : Set :=
   BuildSourceCategories :
   Source ->
   list Category ->
   SourceCategories.

Definition maybeBuildSourceCategories (so_arg: Source) (ca_arg: option (list Category)) : option SourceCategories :=
  match so_arg, ca_arg with
  | so_arg_succ, Some ca_arg_succ => Some (BuildSourceCategories so_arg_succ ca_arg_succ)
  | _, _ => None
  end.
Inductive SourceAuthor : Set :=
   BuildSourceAuthor :
   Source ->
   Author ->
   SourceAuthor.

Definition maybeBuildSourceAuthor (so_arg: Source) (au_arg: option (Author)) : option SourceAuthor :=
  match so_arg, au_arg with
  | so_arg_succ, Some au_arg_succ => Some (BuildSourceAuthor so_arg_succ au_arg_succ)
  | _, _ => None
  end.



Inductive CategoryAtom : Set :=
   BuildCategoryAtom :
   Category ->
   ATOM ->
   CategoryAtom.

Definition maybeBuildCategoryAtom (ca_arg: Category) (at_arg: option (ATOM)) : option CategoryAtom :=
  match ca_arg, at_arg with
  | ca_arg_succ, Some at_arg_succ => Some (BuildCategoryAtom ca_arg_succ at_arg_succ)
  | _, _ => None
  end.
Inductive CategoryEntry : Set :=
   BuildCategoryEntry :
   Category ->
   Entry ->
   CategoryEntry.

Definition maybeBuildCategoryEntry (ca_arg: Category) (en_arg: option (Entry)) : option CategoryEntry :=
  match ca_arg, en_arg with
  | ca_arg_succ, Some en_arg_succ => Some (BuildCategoryEntry ca_arg_succ en_arg_succ)
  | _, _ => None
  end.

Inductive LinkAtom : Set :=
   BuildLinkAtom :
   Link ->
   ATOM ->
   LinkAtom.

Definition maybeBuildLinkAtom (li_arg: Link) (at_arg: option (ATOM)) : option LinkAtom :=
  match li_arg, at_arg with
  | li_arg_succ, Some at_arg_succ => Some (BuildLinkAtom li_arg_succ at_arg_succ)
  | _, _ => None
  end.
Inductive LinkEntry : Set :=
   BuildLinkEntry :
   Link ->
   Entry ->
   LinkEntry.

Definition maybeBuildLinkEntry (li_arg: Link) (en_arg: option (Entry)) : option LinkEntry :=
  match li_arg, en_arg with
  | li_arg_succ, Some en_arg_succ => Some (BuildLinkEntry li_arg_succ en_arg_succ)
  | _, _ => None
  end.

Inductive AuthorAtom : Set :=
   BuildAuthorAtom :
   Author ->
   ATOM ->
   AuthorAtom.

Definition maybeBuildAuthorAtom (au_arg: Author) (at_arg: option (ATOM)) : option AuthorAtom :=
  match au_arg, at_arg with
  | au_arg_succ, Some at_arg_succ => Some (BuildAuthorAtom au_arg_succ at_arg_succ)
  | _, _ => None
  end.




(* Accessors *)
Definition ATOM_getTitle (a : ATOM) :  string :=
  match a with BuildATOM  title id subtitle rights icon logo lastUpdate  => title end.
Definition ATOM_getId (a : ATOM) :  string :=
  match a with BuildATOM  title id subtitle rights icon logo lastUpdate  => id end.
Definition ATOM_getSubtitle (a : ATOM) :  option  string :=
  match a with BuildATOM  title id subtitle rights icon logo lastUpdate  => subtitle end.
Definition ATOM_getRights (a : ATOM) :  option  string :=
  match a with BuildATOM  title id subtitle rights icon logo lastUpdate  => rights end.
Definition ATOM_getIcon (a : ATOM) :  option  string :=
  match a with BuildATOM  title id subtitle rights icon logo lastUpdate  => icon end.
Definition ATOM_getLogo (a : ATOM) :  option  string :=
  match a with BuildATOM  title id subtitle rights icon logo lastUpdate  => logo end.
Definition ATOM_getLastUpdate (a : ATOM) :  string :=
  match a with BuildATOM  title id subtitle rights icon logo lastUpdate  => lastUpdate end.

Definition Entry_getTitle (e : Entry) :  string :=
  match e with BuildEntry  title id rights summary published lastUpdate  => title end.
Definition Entry_getId (e : Entry) :  string :=
  match e with BuildEntry  title id rights summary published lastUpdate  => id end.
Definition Entry_getRights (e : Entry) :  option  string :=
  match e with BuildEntry  title id rights summary published lastUpdate  => rights end.
Definition Entry_getSummary (e : Entry) :  option  string :=
  match e with BuildEntry  title id rights summary published lastUpdate  => summary end.
Definition Entry_getPublished (e : Entry) :  option  string :=
  match e with BuildEntry  title id rights summary published lastUpdate  => published end.
Definition Entry_getLastUpdate (e : Entry) :  string :=
  match e with BuildEntry  title id rights summary published lastUpdate  => lastUpdate end.

Definition Source_getId (s : Source) :  option  string :=
  match s with BuildSource  id icon logo rights title subtitle lastUpdate  => id end.
Definition Source_getIcon (s : Source) :  option  string :=
  match s with BuildSource  id icon logo rights title subtitle lastUpdate  => icon end.
Definition Source_getLogo (s : Source) :  option  string :=
  match s with BuildSource  id icon logo rights title subtitle lastUpdate  => logo end.
Definition Source_getRights (s : Source) :  option  string :=
  match s with BuildSource  id icon logo rights title subtitle lastUpdate  => rights end.
Definition Source_getTitle (s : Source) :  option  string :=
  match s with BuildSource  id icon logo rights title subtitle lastUpdate  => title end.
Definition Source_getSubtitle (s : Source) :  option  string :=
  match s with BuildSource  id icon logo rights title subtitle lastUpdate  => subtitle end.
Definition Source_getLastUpdate (s : Source) :  option  string :=
  match s with BuildSource  id icon logo rights title subtitle lastUpdate  => lastUpdate end.

Definition Content_getType (c : Content) :  option  string :=
  match c with BuildContent  type mode text  => type end.
Definition Content_getMode (c : Content) :  option  string :=
  match c with BuildContent  type mode text  => mode end.
Definition Content_getText (c : Content) :  option  string :=
  match c with BuildContent  type mode text  => text end.

Definition Generator_getUri (g : Generator) :  option  string :=
  match g with BuildGenerator  uri version name  => uri end.
Definition Generator_getVersion (g : Generator) :  option  string :=
  match g with BuildGenerator  uri version name  => version end.
Definition Generator_getName (g : Generator) :  string :=
  match g with BuildGenerator  uri version name  => name end.

Definition Category_getTerm (c : Category) :  string :=
  match c with BuildCategory  term scheme label  => term end.
Definition Category_getScheme (c : Category) :  option  string :=
  match c with BuildCategory  term scheme label  => scheme end.
Definition Category_getLabel (c : Category) :  option  string :=
  match c with BuildCategory  term scheme label  => label end.

Definition Link_getRel (l : Link) :  option  string :=
  match l with BuildLink  rel hrefl type hreflang title lenght  => rel end.
Definition Link_getHrefl (l : Link) :  option  string :=
  match l with BuildLink  rel hrefl type hreflang title lenght  => hrefl end.
Definition Link_getType (l : Link) :  option  string :=
  match l with BuildLink  rel hrefl type hreflang title lenght  => type end.
Definition Link_getHreflang (l : Link) :  option  string :=
  match l with BuildLink  rel hrefl type hreflang title lenght  => hreflang end.
Definition Link_getTitle (l : Link) :  option  string :=
  match l with BuildLink  rel hrefl type hreflang title lenght  => title end.
Definition Link_getLenght (l : Link) :  option  nat :=
  match l with BuildLink  rel hrefl type hreflang title lenght  => lenght end.

Definition Author_getName (a : Author) :  string :=
  match a with BuildAuthor  name uri email  => name end.
Definition Author_getUri (a : Author) :  option  string :=
  match a with BuildAuthor  name uri email  => uri end.
Definition Author_getEmail (a : Author) :  option  string :=
  match a with BuildAuthor  name uri email  => email end.

Definition Contributor_getName (c : Contributor) :  string :=
  match c with BuildContributor  name uri email  => name end.
Definition Contributor_getUri (c : Contributor) :  option  string :=
  match c with BuildContributor  name uri email  => uri end.
Definition Contributor_getEmail (c : Contributor) :  option  string :=
  match c with BuildContributor  name uri email  => email end.


Definition beq_ATOM (at_arg1 : ATOM) (at_arg2 : ATOM) : bool :=
(  beq_string (ATOM_getTitle at_arg1) (ATOM_getTitle at_arg2) ) && 
(  beq_string (ATOM_getId at_arg1) (ATOM_getId at_arg2) ) && 
(  option_beq string  beq_string (ATOM_getSubtitle at_arg1) (ATOM_getSubtitle at_arg2) ) && 
(  option_beq string  beq_string (ATOM_getRights at_arg1) (ATOM_getRights at_arg2) ) && 
(  option_beq string  beq_string (ATOM_getIcon at_arg1) (ATOM_getIcon at_arg2) ) && 
(  option_beq string  beq_string (ATOM_getLogo at_arg1) (ATOM_getLogo at_arg2) ) && 
(  beq_string (ATOM_getLastUpdate at_arg1) (ATOM_getLastUpdate at_arg2) )
.

Definition beq_Entry (en_arg1 : Entry) (en_arg2 : Entry) : bool :=
(  beq_string (Entry_getTitle en_arg1) (Entry_getTitle en_arg2) ) && 
(  beq_string (Entry_getId en_arg1) (Entry_getId en_arg2) ) && 
(  option_beq string  beq_string (Entry_getRights en_arg1) (Entry_getRights en_arg2) ) && 
(  option_beq string  beq_string (Entry_getSummary en_arg1) (Entry_getSummary en_arg2) ) && 
(  option_beq string  beq_string (Entry_getPublished en_arg1) (Entry_getPublished en_arg2) ) && 
(  beq_string (Entry_getLastUpdate en_arg1) (Entry_getLastUpdate en_arg2) )
.

Definition beq_Source (so_arg1 : Source) (so_arg2 : Source) : bool :=
(  option_beq string  beq_string (Source_getId so_arg1) (Source_getId so_arg2) ) && 
(  option_beq string  beq_string (Source_getIcon so_arg1) (Source_getIcon so_arg2) ) && 
(  option_beq string  beq_string (Source_getLogo so_arg1) (Source_getLogo so_arg2) ) && 
(  option_beq string  beq_string (Source_getRights so_arg1) (Source_getRights so_arg2) ) && 
(  option_beq string  beq_string (Source_getTitle so_arg1) (Source_getTitle so_arg2) ) && 
(  option_beq string  beq_string (Source_getSubtitle so_arg1) (Source_getSubtitle so_arg2) ) && 
(  option_beq string  beq_string (Source_getLastUpdate so_arg1) (Source_getLastUpdate so_arg2) )
.

Definition beq_Content (co_arg1 : Content) (co_arg2 : Content) : bool :=
(  option_beq string  beq_string (Content_getType co_arg1) (Content_getType co_arg2) ) && 
(  option_beq string  beq_string (Content_getMode co_arg1) (Content_getMode co_arg2) ) && 
(  option_beq string  beq_string (Content_getText co_arg1) (Content_getText co_arg2) )
.

Definition beq_Generator (ge_arg1 : Generator) (ge_arg2 : Generator) : bool :=
(  option_beq string  beq_string (Generator_getUri ge_arg1) (Generator_getUri ge_arg2) ) && 
(  option_beq string  beq_string (Generator_getVersion ge_arg1) (Generator_getVersion ge_arg2) ) && 
(  beq_string (Generator_getName ge_arg1) (Generator_getName ge_arg2) )
.

Definition beq_Category (ca_arg1 : Category) (ca_arg2 : Category) : bool :=
(  beq_string (Category_getTerm ca_arg1) (Category_getTerm ca_arg2) ) && 
(  option_beq string  beq_string (Category_getScheme ca_arg1) (Category_getScheme ca_arg2) ) && 
(  option_beq string  beq_string (Category_getLabel ca_arg1) (Category_getLabel ca_arg2) )
.

Definition beq_Link (li_arg1 : Link) (li_arg2 : Link) : bool :=
(  option_beq string  beq_string (Link_getRel li_arg1) (Link_getRel li_arg2) ) && 
(  option_beq string  beq_string (Link_getHrefl li_arg1) (Link_getHrefl li_arg2) ) && 
(  option_beq string  beq_string (Link_getType li_arg1) (Link_getType li_arg2) ) && 
(  option_beq string  beq_string (Link_getHreflang li_arg1) (Link_getHreflang li_arg2) ) && 
(  option_beq string  beq_string (Link_getTitle li_arg1) (Link_getTitle li_arg2) ) && 
(  option_beq nat  beq_nat (Link_getLenght li_arg1) (Link_getLenght li_arg2) )
.

Definition beq_Author (au_arg1 : Author) (au_arg2 : Author) : bool :=
(  beq_string (Author_getName au_arg1) (Author_getName au_arg2) ) && 
(  option_beq string  beq_string (Author_getUri au_arg1) (Author_getUri au_arg2) ) && 
(  option_beq string  beq_string (Author_getEmail au_arg1) (Author_getEmail au_arg2) )
.

Definition beq_Contributor (co_arg1 : Contributor) (co_arg2 : Contributor) : bool :=
(  beq_string (Contributor_getName co_arg1) (Contributor_getName co_arg2) ) && 
(  option_beq string  beq_string (Contributor_getUri co_arg1) (Contributor_getUri co_arg2) ) && 
(  option_beq string  beq_string (Contributor_getEmail co_arg1) (Contributor_getEmail co_arg2) )
.


(* Meta-types *)	
Inductive ATOMMetamodel_Class : Set :=
  | ATOMClass
  | EntryClass
  | SourceClass
  | ContentClass
  | GeneratorClass
  | CategoryClass
  | LinkClass
  | AuthorClass
  | ContributorClass
.

Definition ATOMMetamodel_getTypeByClass (atcl_arg : ATOMMetamodel_Class) : Set :=
  match atcl_arg with
    | ATOMClass => ATOM
    | EntryClass => Entry
    | SourceClass => Source
    | ContentClass => Content
    | GeneratorClass => Generator
    | CategoryClass => Category
    | LinkClass => Link
    | AuthorClass => Author
    | ContributorClass => Contributor
  end.	

Inductive ATOMMetamodel_Reference : Set :=
| ATOMLinksReference
| ATOMGeneratorReference
| ATOMCategoriesReference
| ATOMAuthorsReference
| ATOMContributorsReference
| ATOMEntrieReference
| EntryLinksReference
| EntrySourceReference
| EntryContentReference
| EntryCategoriesReference
| EntryAuthorsReference
| EntryContributorsReference
| EntryAtomReference
| SourceLinksReference
| SourceGeneratorReference
| SourceContributorsReference
| SourceCategoriesReference
| SourceAuthorReference
| CategoryAtomReference
| CategoryEntryReference
| LinkAtomReference
| LinkEntryReference
| AuthorAtomReference
.

Definition ATOMMetamodel_getTypeByReference (atre_arg : ATOMMetamodel_Reference) : Set :=
  match atre_arg with
| ATOMLinksReference => ATOMLinks
| ATOMGeneratorReference => ATOMGenerator
| ATOMCategoriesReference => ATOMCategories
| ATOMAuthorsReference => ATOMAuthors
| ATOMContributorsReference => ATOMContributors
| ATOMEntrieReference => ATOMEntrie
| EntryLinksReference => EntryLinks
| EntrySourceReference => EntrySource
| EntryContentReference => EntryContent
| EntryCategoriesReference => EntryCategories
| EntryAuthorsReference => EntryAuthors
| EntryContributorsReference => EntryContributors
| EntryAtomReference => EntryAtom
| SourceLinksReference => SourceLinks
| SourceGeneratorReference => SourceGenerator
| SourceContributorsReference => SourceContributors
| SourceCategoriesReference => SourceCategories
| SourceAuthorReference => SourceAuthor
| CategoryAtomReference => CategoryAtom
| CategoryEntryReference => CategoryEntry
| LinkAtomReference => LinkAtom
| LinkEntryReference => LinkEntry
| AuthorAtomReference => AuthorAtom
  end.

Definition ATOMMetamodel_getERoleTypesByEReference (atre_arg : ATOMMetamodel_Reference) : Set :=
  match atre_arg with
| ATOMLinksReference => (ATOM * list Link)
| ATOMGeneratorReference => (ATOM * Generator)
| ATOMCategoriesReference => (ATOM * list Category)
| ATOMAuthorsReference => (ATOM * list Author)
| ATOMContributorsReference => (ATOM * list Contributor)
| ATOMEntrieReference => (ATOM * list Entry)
| EntryLinksReference => (Entry * list Link)
| EntrySourceReference => (Entry * Source)
| EntryContentReference => (Entry * Content)
| EntryCategoriesReference => (Entry * list Category)
| EntryAuthorsReference => (Entry * list Author)
| EntryContributorsReference => (Entry * list Contributor)
| EntryAtomReference => (Entry * ATOM)
| SourceLinksReference => (Source * list Link)
| SourceGeneratorReference => (Source * Generator)
| SourceContributorsReference => (Source * list Contributor)
| SourceCategoriesReference => (Source * list Category)
| SourceAuthorReference => (Source * Author)
| CategoryAtomReference => (Category * ATOM)
| CategoryEntryReference => (Category * Entry)
| LinkAtomReference => (Link * ATOM)
| LinkEntryReference => (Link * Entry)
| AuthorAtomReference => (Author * ATOM)
  end.

(* Generic types *)			
Inductive ATOMMetamodel_Object : Set :=
 | Build_ATOMMetamodel_Object : 
    forall (atcl_arg: ATOMMetamodel_Class), (ATOMMetamodel_getTypeByClass atcl_arg) -> ATOMMetamodel_Object.

Definition beq_ATOMMetamodel_Object (c1 : ATOMMetamodel_Object) (c2 : ATOMMetamodel_Object) : bool :=
  match c1, c2 with
  | Build_ATOMMetamodel_Object ATOMClass o1, Build_ATOMMetamodel_Object ATOMClass o2 => beq_ATOM o1 o2
  | Build_ATOMMetamodel_Object EntryClass o1, Build_ATOMMetamodel_Object EntryClass o2 => beq_Entry o1 o2
  | Build_ATOMMetamodel_Object SourceClass o1, Build_ATOMMetamodel_Object SourceClass o2 => beq_Source o1 o2
  | Build_ATOMMetamodel_Object ContentClass o1, Build_ATOMMetamodel_Object ContentClass o2 => beq_Content o1 o2
  | Build_ATOMMetamodel_Object GeneratorClass o1, Build_ATOMMetamodel_Object GeneratorClass o2 => beq_Generator o1 o2
  | Build_ATOMMetamodel_Object CategoryClass o1, Build_ATOMMetamodel_Object CategoryClass o2 => beq_Category o1 o2
  | Build_ATOMMetamodel_Object LinkClass o1, Build_ATOMMetamodel_Object LinkClass o2 => beq_Link o1 o2
  | Build_ATOMMetamodel_Object AuthorClass o1, Build_ATOMMetamodel_Object AuthorClass o2 => beq_Author o1 o2
  | Build_ATOMMetamodel_Object ContributorClass o1, Build_ATOMMetamodel_Object ContributorClass o2 => beq_Contributor o1 o2
  | _, _ => false
  end.

Inductive ATOMMetamodel_Link : Set :=
 | Build_ATOMMetamodel_Link : 
    forall (atre_arg:ATOMMetamodel_Reference), (ATOMMetamodel_getTypeByReference atre_arg) -> ATOMMetamodel_Link.

(* TODO *)
Definition beq_ATOMMetamodel_Link (l1 : ATOMMetamodel_Link) (l2 : ATOMMetamodel_Link) : bool := true.

(* Reflective functions *)
Lemma ATOMMetamodel_eqEClass_dec : 
 forall (atcl_arg1:ATOMMetamodel_Class) (atcl_arg2:ATOMMetamodel_Class), { atcl_arg1 = atcl_arg2 } + { atcl_arg1 <> atcl_arg2 }.
Proof. repeat decide equality. Defined.

Lemma ATOMMetamodel_eqEReference_dec : 
 forall (atre_arg1:ATOMMetamodel_Reference) (atre_arg2:ATOMMetamodel_Reference), { atre_arg1 = atre_arg2 } + { atre_arg1 <> atre_arg2 }.
Proof. repeat decide equality. Defined.

Definition ATOMMetamodel_getEClass (atob_arg : ATOMMetamodel_Object) : ATOMMetamodel_Class :=
   match atob_arg with
  | (Build_ATOMMetamodel_Object atob_arg _) => atob_arg
   end.

Definition ATOMMetamodel_getEReference (atli_arg : ATOMMetamodel_Link) : ATOMMetamodel_Reference :=
   match atli_arg with
  | (Build_ATOMMetamodel_Link atli_arg _) => atli_arg
   end.

Definition ATOMMetamodel_instanceOfEClass (atcl_arg: ATOMMetamodel_Class) (atob_arg : ATOMMetamodel_Object): bool :=
  if ATOMMetamodel_eqEClass_dec (ATOMMetamodel_getEClass atob_arg) atcl_arg then true else false.

Definition ATOMMetamodel_instanceOfEReference (atre_arg: ATOMMetamodel_Reference) (atli_arg : ATOMMetamodel_Link): bool :=
  if ATOMMetamodel_eqEReference_dec (ATOMMetamodel_getEReference atli_arg) atre_arg then true else false.


Definition ATOMMetamodel_toClass (atcl_arg : ATOMMetamodel_Class) (atob_arg : ATOMMetamodel_Object) : option (ATOMMetamodel_getTypeByClass atcl_arg).
Proof.
  destruct atob_arg as [arg1 arg2].
  destruct (ATOMMetamodel_eqEClass_dec arg1 atcl_arg) as [e|] eqn:dec_case.
  - rewrite e in arg2.
    exact (Some arg2).
  - exact None.
Defined.

Definition ATOMMetamodel_toReference (atre_arg : ATOMMetamodel_Reference) (atli_arg : ATOMMetamodel_Link) : option (ATOMMetamodel_getTypeByReference atre_arg).
Proof.
  destruct atli_arg as [arg1 arg2].
  destruct (ATOMMetamodel_eqEReference_dec arg1 atre_arg) as [e|] eqn:dec_case.
  - rewrite e in arg2.
  	exact (Some arg2).
  - exact None.
Defined.

(* Generic functions *)
Definition ATOMModel := Model ATOMMetamodel_Object ATOMMetamodel_Link.

Definition ATOMMetamodel_toObject (atcl_arg: ATOMMetamodel_Class) (t: ATOMMetamodel_getTypeByClass atcl_arg) : ATOMMetamodel_Object :=
  (Build_ATOMMetamodel_Object atcl_arg t).

Definition ATOMMetamodel_toLink (atre_arg: ATOMMetamodel_Reference) (t: ATOMMetamodel_getTypeByReference atre_arg) : ATOMMetamodel_Link :=
  (Build_ATOMMetamodel_Link atre_arg t).




Fixpoint ATOM_getLinksOnLinks (at_arg : ATOM) (l : list ATOMMetamodel_Link) : option (list Link) :=
match l with
| (Build_ATOMMetamodel_Link ATOMLinksReference (BuildATOMLinks ATOM_ctr links_ctr)) :: l' => 
	  if beq_ATOM ATOM_ctr at_arg then Some links_ctr else ATOM_getLinksOnLinks at_arg l'
| _ :: l' => ATOM_getLinksOnLinks at_arg l'
| nil => None
end.

Definition ATOM_getLinks (at_arg : ATOM) (m : ATOMModel) : option (list Link) :=
  ATOM_getLinksOnLinks at_arg (@allModelLinks _ _ m).
  
Definition ATOM_getLinksObjects (at_arg : ATOM) (m : ATOMModel) : option (list ATOMMetamodel_Object) :=
  match ATOM_getLinks at_arg m with
  | Some l => Some (map (ATOMMetamodel_toObject LinkClass) l)
  | _ => None
  end.
Fixpoint ATOM_getGeneratorOnLinks (at_arg : ATOM) (l : list ATOMMetamodel_Link) : option (Generator) :=
match l with
| (Build_ATOMMetamodel_Link ATOMGeneratorReference (BuildATOMGenerator ATOM_ctr generator_ctr)) :: l' => 
	  if beq_ATOM ATOM_ctr at_arg then Some generator_ctr else ATOM_getGeneratorOnLinks at_arg l'
| _ :: l' => ATOM_getGeneratorOnLinks at_arg l'
| nil => None
end.

Definition ATOM_getGenerator (at_arg : ATOM) (m : ATOMModel) : option (Generator) :=
  ATOM_getGeneratorOnLinks at_arg (@allModelLinks _ _ m).
  
Definition ATOM_getGeneratorObject (at_arg : ATOM) (m : ATOMModel) : option (ATOMMetamodel_Object) :=
  match ATOM_getGenerator at_arg m with
  | Some ge_arg => Some (ATOMMetamodel_toObject GeneratorClass ge_arg) 
  | _ => None
  end.
Fixpoint ATOM_getCategoriesOnLinks (at_arg : ATOM) (l : list ATOMMetamodel_Link) : option (list Category) :=
match l with
| (Build_ATOMMetamodel_Link ATOMCategoriesReference (BuildATOMCategories ATOM_ctr categories_ctr)) :: l' => 
	  if beq_ATOM ATOM_ctr at_arg then Some categories_ctr else ATOM_getCategoriesOnLinks at_arg l'
| _ :: l' => ATOM_getCategoriesOnLinks at_arg l'
| nil => None
end.

Definition ATOM_getCategories (at_arg : ATOM) (m : ATOMModel) : option (list Category) :=
  ATOM_getCategoriesOnLinks at_arg (@allModelLinks _ _ m).
  
Definition ATOM_getCategoriesObjects (at_arg : ATOM) (m : ATOMModel) : option (list ATOMMetamodel_Object) :=
  match ATOM_getCategories at_arg m with
  | Some l => Some (map (ATOMMetamodel_toObject CategoryClass) l)
  | _ => None
  end.
Fixpoint ATOM_getAuthorsOnLinks (at_arg : ATOM) (l : list ATOMMetamodel_Link) : option (list Author) :=
match l with
| (Build_ATOMMetamodel_Link ATOMAuthorsReference (BuildATOMAuthors ATOM_ctr authors_ctr)) :: l' => 
	  if beq_ATOM ATOM_ctr at_arg then Some authors_ctr else ATOM_getAuthorsOnLinks at_arg l'
| _ :: l' => ATOM_getAuthorsOnLinks at_arg l'
| nil => None
end.

Definition ATOM_getAuthors (at_arg : ATOM) (m : ATOMModel) : option (list Author) :=
  ATOM_getAuthorsOnLinks at_arg (@allModelLinks _ _ m).
  
Definition ATOM_getAuthorsObjects (at_arg : ATOM) (m : ATOMModel) : option (list ATOMMetamodel_Object) :=
  match ATOM_getAuthors at_arg m with
  | Some l => Some (map (ATOMMetamodel_toObject AuthorClass) l)
  | _ => None
  end.
Fixpoint ATOM_getContributorsOnLinks (at_arg : ATOM) (l : list ATOMMetamodel_Link) : option (list Contributor) :=
match l with
| (Build_ATOMMetamodel_Link ATOMContributorsReference (BuildATOMContributors ATOM_ctr contributors_ctr)) :: l' => 
	  if beq_ATOM ATOM_ctr at_arg then Some contributors_ctr else ATOM_getContributorsOnLinks at_arg l'
| _ :: l' => ATOM_getContributorsOnLinks at_arg l'
| nil => None
end.

Definition ATOM_getContributors (at_arg : ATOM) (m : ATOMModel) : option (list Contributor) :=
  ATOM_getContributorsOnLinks at_arg (@allModelLinks _ _ m).
  
Definition ATOM_getContributorsObjects (at_arg : ATOM) (m : ATOMModel) : option (list ATOMMetamodel_Object) :=
  match ATOM_getContributors at_arg m with
  | Some l => Some (map (ATOMMetamodel_toObject ContributorClass) l)
  | _ => None
  end.
Fixpoint ATOM_getEntrieOnLinks (at_arg : ATOM) (l : list ATOMMetamodel_Link) : option (list Entry) :=
match l with
| (Build_ATOMMetamodel_Link ATOMEntrieReference (BuildATOMEntrie ATOM_ctr entrie_ctr)) :: l' => 
	  if beq_ATOM ATOM_ctr at_arg then Some entrie_ctr else ATOM_getEntrieOnLinks at_arg l'
| _ :: l' => ATOM_getEntrieOnLinks at_arg l'
| nil => None
end.

Definition ATOM_getEntrie (at_arg : ATOM) (m : ATOMModel) : option (list Entry) :=
  ATOM_getEntrieOnLinks at_arg (@allModelLinks _ _ m).
  
Definition ATOM_getEntrieObjects (at_arg : ATOM) (m : ATOMModel) : option (list ATOMMetamodel_Object) :=
  match ATOM_getEntrie at_arg m with
  | Some l => Some (map (ATOMMetamodel_toObject EntryClass) l)
  | _ => None
  end.

Fixpoint Entry_getLinksOnLinks (en_arg : Entry) (l : list ATOMMetamodel_Link) : option (list Link) :=
match l with
| (Build_ATOMMetamodel_Link EntryLinksReference (BuildEntryLinks Entry_ctr links_ctr)) :: l' => 
	  if beq_Entry Entry_ctr en_arg then Some links_ctr else Entry_getLinksOnLinks en_arg l'
| _ :: l' => Entry_getLinksOnLinks en_arg l'
| nil => None
end.

Definition Entry_getLinks (en_arg : Entry) (m : ATOMModel) : option (list Link) :=
  Entry_getLinksOnLinks en_arg (@allModelLinks _ _ m).
  
Definition Entry_getLinksObjects (en_arg : Entry) (m : ATOMModel) : option (list ATOMMetamodel_Object) :=
  match Entry_getLinks en_arg m with
  | Some l => Some (map (ATOMMetamodel_toObject LinkClass) l)
  | _ => None
  end.
Fixpoint Entry_getSourceOnLinks (en_arg : Entry) (l : list ATOMMetamodel_Link) : option (Source) :=
match l with
| (Build_ATOMMetamodel_Link EntrySourceReference (BuildEntrySource Entry_ctr source_ctr)) :: l' => 
	  if beq_Entry Entry_ctr en_arg then Some source_ctr else Entry_getSourceOnLinks en_arg l'
| _ :: l' => Entry_getSourceOnLinks en_arg l'
| nil => None
end.

Definition Entry_getSource (en_arg : Entry) (m : ATOMModel) : option (Source) :=
  Entry_getSourceOnLinks en_arg (@allModelLinks _ _ m).
  
Definition Entry_getSourceObject (en_arg : Entry) (m : ATOMModel) : option (ATOMMetamodel_Object) :=
  match Entry_getSource en_arg m with
  | Some so_arg => Some (ATOMMetamodel_toObject SourceClass so_arg) 
  | _ => None
  end.
Fixpoint Entry_getContentOnLinks (en_arg : Entry) (l : list ATOMMetamodel_Link) : option (Content) :=
match l with
| (Build_ATOMMetamodel_Link EntryContentReference (BuildEntryContent Entry_ctr content_ctr)) :: l' => 
	  if beq_Entry Entry_ctr en_arg then Some content_ctr else Entry_getContentOnLinks en_arg l'
| _ :: l' => Entry_getContentOnLinks en_arg l'
| nil => None
end.

Definition Entry_getContent (en_arg : Entry) (m : ATOMModel) : option (Content) :=
  Entry_getContentOnLinks en_arg (@allModelLinks _ _ m).
  
Definition Entry_getContentObject (en_arg : Entry) (m : ATOMModel) : option (ATOMMetamodel_Object) :=
  match Entry_getContent en_arg m with
  | Some co_arg => Some (ATOMMetamodel_toObject ContentClass co_arg) 
  | _ => None
  end.
Fixpoint Entry_getCategoriesOnLinks (en_arg : Entry) (l : list ATOMMetamodel_Link) : option (list Category) :=
match l with
| (Build_ATOMMetamodel_Link EntryCategoriesReference (BuildEntryCategories Entry_ctr categories_ctr)) :: l' => 
	  if beq_Entry Entry_ctr en_arg then Some categories_ctr else Entry_getCategoriesOnLinks en_arg l'
| _ :: l' => Entry_getCategoriesOnLinks en_arg l'
| nil => None
end.

Definition Entry_getCategories (en_arg : Entry) (m : ATOMModel) : option (list Category) :=
  Entry_getCategoriesOnLinks en_arg (@allModelLinks _ _ m).
  
Definition Entry_getCategoriesObjects (en_arg : Entry) (m : ATOMModel) : option (list ATOMMetamodel_Object) :=
  match Entry_getCategories en_arg m with
  | Some l => Some (map (ATOMMetamodel_toObject CategoryClass) l)
  | _ => None
  end.
Fixpoint Entry_getAuthorsOnLinks (en_arg : Entry) (l : list ATOMMetamodel_Link) : option (list Author) :=
match l with
| (Build_ATOMMetamodel_Link EntryAuthorsReference (BuildEntryAuthors Entry_ctr authors_ctr)) :: l' => 
	  if beq_Entry Entry_ctr en_arg then Some authors_ctr else Entry_getAuthorsOnLinks en_arg l'
| _ :: l' => Entry_getAuthorsOnLinks en_arg l'
| nil => None
end.

Definition Entry_getAuthors (en_arg : Entry) (m : ATOMModel) : option (list Author) :=
  Entry_getAuthorsOnLinks en_arg (@allModelLinks _ _ m).
  
Definition Entry_getAuthorsObjects (en_arg : Entry) (m : ATOMModel) : option (list ATOMMetamodel_Object) :=
  match Entry_getAuthors en_arg m with
  | Some l => Some (map (ATOMMetamodel_toObject AuthorClass) l)
  | _ => None
  end.
Fixpoint Entry_getContributorsOnLinks (en_arg : Entry) (l : list ATOMMetamodel_Link) : option (list Contributor) :=
match l with
| (Build_ATOMMetamodel_Link EntryContributorsReference (BuildEntryContributors Entry_ctr contributors_ctr)) :: l' => 
	  if beq_Entry Entry_ctr en_arg then Some contributors_ctr else Entry_getContributorsOnLinks en_arg l'
| _ :: l' => Entry_getContributorsOnLinks en_arg l'
| nil => None
end.

Definition Entry_getContributors (en_arg : Entry) (m : ATOMModel) : option (list Contributor) :=
  Entry_getContributorsOnLinks en_arg (@allModelLinks _ _ m).
  
Definition Entry_getContributorsObjects (en_arg : Entry) (m : ATOMModel) : option (list ATOMMetamodel_Object) :=
  match Entry_getContributors en_arg m with
  | Some l => Some (map (ATOMMetamodel_toObject ContributorClass) l)
  | _ => None
  end.
Fixpoint Entry_getAtomOnLinks (en_arg : Entry) (l : list ATOMMetamodel_Link) : option (ATOM) :=
match l with
| (Build_ATOMMetamodel_Link EntryAtomReference (BuildEntryAtom Entry_ctr atom_ctr)) :: l' => 
	  if beq_Entry Entry_ctr en_arg then Some atom_ctr else Entry_getAtomOnLinks en_arg l'
| _ :: l' => Entry_getAtomOnLinks en_arg l'
| nil => None
end.

Definition Entry_getAtom (en_arg : Entry) (m : ATOMModel) : option (ATOM) :=
  Entry_getAtomOnLinks en_arg (@allModelLinks _ _ m).
  
Definition Entry_getAtomObject (en_arg : Entry) (m : ATOMModel) : option (ATOMMetamodel_Object) :=
  match Entry_getAtom en_arg m with
  | Some at_arg => Some (ATOMMetamodel_toObject ATOMClass at_arg) 
  | _ => None
  end.

Fixpoint Source_getLinksOnLinks (so_arg : Source) (l : list ATOMMetamodel_Link) : option (list Link) :=
match l with
| (Build_ATOMMetamodel_Link SourceLinksReference (BuildSourceLinks Source_ctr links_ctr)) :: l' => 
	  if beq_Source Source_ctr so_arg then Some links_ctr else Source_getLinksOnLinks so_arg l'
| _ :: l' => Source_getLinksOnLinks so_arg l'
| nil => None
end.

Definition Source_getLinks (so_arg : Source) (m : ATOMModel) : option (list Link) :=
  Source_getLinksOnLinks so_arg (@allModelLinks _ _ m).
  
Definition Source_getLinksObjects (so_arg : Source) (m : ATOMModel) : option (list ATOMMetamodel_Object) :=
  match Source_getLinks so_arg m with
  | Some l => Some (map (ATOMMetamodel_toObject LinkClass) l)
  | _ => None
  end.
Fixpoint Source_getGeneratorOnLinks (so_arg : Source) (l : list ATOMMetamodel_Link) : option (Generator) :=
match l with
| (Build_ATOMMetamodel_Link SourceGeneratorReference (BuildSourceGenerator Source_ctr generator_ctr)) :: l' => 
	  if beq_Source Source_ctr so_arg then Some generator_ctr else Source_getGeneratorOnLinks so_arg l'
| _ :: l' => Source_getGeneratorOnLinks so_arg l'
| nil => None
end.

Definition Source_getGenerator (so_arg : Source) (m : ATOMModel) : option (Generator) :=
  Source_getGeneratorOnLinks so_arg (@allModelLinks _ _ m).
  
Definition Source_getGeneratorObject (so_arg : Source) (m : ATOMModel) : option (ATOMMetamodel_Object) :=
  match Source_getGenerator so_arg m with
  | Some ge_arg => Some (ATOMMetamodel_toObject GeneratorClass ge_arg) 
  | _ => None
  end.
Fixpoint Source_getContributorsOnLinks (so_arg : Source) (l : list ATOMMetamodel_Link) : option (list Contributor) :=
match l with
| (Build_ATOMMetamodel_Link SourceContributorsReference (BuildSourceContributors Source_ctr contributors_ctr)) :: l' => 
	  if beq_Source Source_ctr so_arg then Some contributors_ctr else Source_getContributorsOnLinks so_arg l'
| _ :: l' => Source_getContributorsOnLinks so_arg l'
| nil => None
end.

Definition Source_getContributors (so_arg : Source) (m : ATOMModel) : option (list Contributor) :=
  Source_getContributorsOnLinks so_arg (@allModelLinks _ _ m).
  
Definition Source_getContributorsObjects (so_arg : Source) (m : ATOMModel) : option (list ATOMMetamodel_Object) :=
  match Source_getContributors so_arg m with
  | Some l => Some (map (ATOMMetamodel_toObject ContributorClass) l)
  | _ => None
  end.
Fixpoint Source_getCategoriesOnLinks (so_arg : Source) (l : list ATOMMetamodel_Link) : option (list Category) :=
match l with
| (Build_ATOMMetamodel_Link SourceCategoriesReference (BuildSourceCategories Source_ctr categories_ctr)) :: l' => 
	  if beq_Source Source_ctr so_arg then Some categories_ctr else Source_getCategoriesOnLinks so_arg l'
| _ :: l' => Source_getCategoriesOnLinks so_arg l'
| nil => None
end.

Definition Source_getCategories (so_arg : Source) (m : ATOMModel) : option (list Category) :=
  Source_getCategoriesOnLinks so_arg (@allModelLinks _ _ m).
  
Definition Source_getCategoriesObjects (so_arg : Source) (m : ATOMModel) : option (list ATOMMetamodel_Object) :=
  match Source_getCategories so_arg m with
  | Some l => Some (map (ATOMMetamodel_toObject CategoryClass) l)
  | _ => None
  end.
Fixpoint Source_getAuthorOnLinks (so_arg : Source) (l : list ATOMMetamodel_Link) : option (Author) :=
match l with
| (Build_ATOMMetamodel_Link SourceAuthorReference (BuildSourceAuthor Source_ctr author_ctr)) :: l' => 
	  if beq_Source Source_ctr so_arg then Some author_ctr else Source_getAuthorOnLinks so_arg l'
| _ :: l' => Source_getAuthorOnLinks so_arg l'
| nil => None
end.

Definition Source_getAuthor (so_arg : Source) (m : ATOMModel) : option (Author) :=
  Source_getAuthorOnLinks so_arg (@allModelLinks _ _ m).
  
Definition Source_getAuthorObject (so_arg : Source) (m : ATOMModel) : option (ATOMMetamodel_Object) :=
  match Source_getAuthor so_arg m with
  | Some au_arg => Some (ATOMMetamodel_toObject AuthorClass au_arg) 
  | _ => None
  end.



Fixpoint Category_getAtomOnLinks (ca_arg : Category) (l : list ATOMMetamodel_Link) : option (ATOM) :=
match l with
| (Build_ATOMMetamodel_Link CategoryAtomReference (BuildCategoryAtom Category_ctr atom_ctr)) :: l' => 
	  if beq_Category Category_ctr ca_arg then Some atom_ctr else Category_getAtomOnLinks ca_arg l'
| _ :: l' => Category_getAtomOnLinks ca_arg l'
| nil => None
end.

Definition Category_getAtom (ca_arg : Category) (m : ATOMModel) : option (ATOM) :=
  Category_getAtomOnLinks ca_arg (@allModelLinks _ _ m).
  
Definition Category_getAtomObject (ca_arg : Category) (m : ATOMModel) : option (ATOMMetamodel_Object) :=
  match Category_getAtom ca_arg m with
  | Some at_arg => Some (ATOMMetamodel_toObject ATOMClass at_arg) 
  | _ => None
  end.
Fixpoint Category_getEntryOnLinks (ca_arg : Category) (l : list ATOMMetamodel_Link) : option (Entry) :=
match l with
| (Build_ATOMMetamodel_Link CategoryEntryReference (BuildCategoryEntry Category_ctr entry_ctr)) :: l' => 
	  if beq_Category Category_ctr ca_arg then Some entry_ctr else Category_getEntryOnLinks ca_arg l'
| _ :: l' => Category_getEntryOnLinks ca_arg l'
| nil => None
end.

Definition Category_getEntry (ca_arg : Category) (m : ATOMModel) : option (Entry) :=
  Category_getEntryOnLinks ca_arg (@allModelLinks _ _ m).
  
Definition Category_getEntryObject (ca_arg : Category) (m : ATOMModel) : option (ATOMMetamodel_Object) :=
  match Category_getEntry ca_arg m with
  | Some en_arg => Some (ATOMMetamodel_toObject EntryClass en_arg) 
  | _ => None
  end.

Fixpoint Link_getAtomOnLinks (li_arg : Link) (l : list ATOMMetamodel_Link) : option (ATOM) :=
match l with
| (Build_ATOMMetamodel_Link LinkAtomReference (BuildLinkAtom Link_ctr atom_ctr)) :: l' => 
	  if beq_Link Link_ctr li_arg then Some atom_ctr else Link_getAtomOnLinks li_arg l'
| _ :: l' => Link_getAtomOnLinks li_arg l'
| nil => None
end.

Definition Link_getAtom (li_arg : Link) (m : ATOMModel) : option (ATOM) :=
  Link_getAtomOnLinks li_arg (@allModelLinks _ _ m).
  
Definition Link_getAtomObject (li_arg : Link) (m : ATOMModel) : option (ATOMMetamodel_Object) :=
  match Link_getAtom li_arg m with
  | Some at_arg => Some (ATOMMetamodel_toObject ATOMClass at_arg) 
  | _ => None
  end.
Fixpoint Link_getEntryOnLinks (li_arg : Link) (l : list ATOMMetamodel_Link) : option (Entry) :=
match l with
| (Build_ATOMMetamodel_Link LinkEntryReference (BuildLinkEntry Link_ctr entry_ctr)) :: l' => 
	  if beq_Link Link_ctr li_arg then Some entry_ctr else Link_getEntryOnLinks li_arg l'
| _ :: l' => Link_getEntryOnLinks li_arg l'
| nil => None
end.

Definition Link_getEntry (li_arg : Link) (m : ATOMModel) : option (Entry) :=
  Link_getEntryOnLinks li_arg (@allModelLinks _ _ m).
  
Definition Link_getEntryObject (li_arg : Link) (m : ATOMModel) : option (ATOMMetamodel_Object) :=
  match Link_getEntry li_arg m with
  | Some en_arg => Some (ATOMMetamodel_toObject EntryClass en_arg) 
  | _ => None
  end.

Fixpoint Author_getAtomOnLinks (au_arg : Author) (l : list ATOMMetamodel_Link) : option (ATOM) :=
match l with
| (Build_ATOMMetamodel_Link AuthorAtomReference (BuildAuthorAtom Author_ctr atom_ctr)) :: l' => 
	  if beq_Author Author_ctr au_arg then Some atom_ctr else Author_getAtomOnLinks au_arg l'
| _ :: l' => Author_getAtomOnLinks au_arg l'
| nil => None
end.

Definition Author_getAtom (au_arg : Author) (m : ATOMModel) : option (ATOM) :=
  Author_getAtomOnLinks au_arg (@allModelLinks _ _ m).
  
Definition Author_getAtomObject (au_arg : Author) (m : ATOMModel) : option (ATOMMetamodel_Object) :=
  match Author_getAtom au_arg m with
  | Some at_arg => Some (ATOMMetamodel_toObject ATOMClass at_arg) 
  | _ => None
  end.



(* Typeclass Instances *)	
Instance ATOMMetamodel_ElementSum : Sum ATOMMetamodel_Object ATOMMetamodel_Class :=
{
	denoteSubType := ATOMMetamodel_getTypeByClass;
	toSubType := ATOMMetamodel_toClass;
	toSumType := ATOMMetamodel_toObject;
}.

Instance ATOMMetamodel_LinkSum : Sum ATOMMetamodel_Link ATOMMetamodel_Reference :=
{
	denoteSubType := ATOMMetamodel_getTypeByReference;
	toSubType := ATOMMetamodel_toReference;
	toSumType := ATOMMetamodel_toLink;
}.

Instance ATOMMetamodel_EqDec : EqDec ATOMMetamodel_Object := {
    eq_b := beq_ATOMMetamodel_Object;
}.

Instance ATOMMetamodel_Metamodel_Instance : 
	Metamodel :=
{
	ModelElement := ATOMMetamodel_Object;
	ModelLink := ATOMMetamodel_Link;
}.

Instance ATOMMetamodel_ModelingMetamodel_Instance : 
	ModelingMetamodel ATOMMetamodel_Metamodel_Instance :=
{ 
    elements := ATOMMetamodel_ElementSum;
    links := ATOMMetamodel_LinkSum; 
}.

(* Useful lemmas *)

Lemma ATOM_invert : 
  forall (atcl_arg: ATOMMetamodel_Class) (t1 t2: ATOMMetamodel_getTypeByClass atcl_arg), 
    Build_ATOMMetamodel_Object atcl_arg t1 = Build_ATOMMetamodel_Object atcl_arg t2 -> t1 = t2.
Admitted.
